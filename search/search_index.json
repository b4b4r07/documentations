{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"concepts/kubernetes/components/","text":"Kubernetes\u3092\u69cb\u6210\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u90e1 # \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u7a2e\u5225 \u8aac\u660e etcd master Kubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u6c38\u7d9a\u5316\u306b\u4f7f\u308f\u308c\u308b\u9ad8\u4fe1\u983c\u5206\u6563KVS kube-apiserver master Kubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3059\u308bAPI\u30b5\u30fc\u30d0\u30fc kube-scheduler master Pod\u306e\u30ce\u30fc\u30c9\u3078\u306e\u5272\u308a\u5f53\u3066\u3092\u884c\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc kube-controller-manager master Replication Controller\u306a\u3069\u306e\u5404\u7a2e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3057\u7ba1\u7406\u3059\u308b\u30de\u30cd\u30fc\u30b8\u30e3\u30fc kubelet node Pod\u3092\u8d77\u52d5\u3057\u7ba1\u7406\u3059\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8(Node\u306e\u30e1\u30a4\u30f3\u51e6\u7406) kube-proxy node Kubernetes\u306eService\u304c\u6301\u3064\u4eee\u60f3\u7684\u306aIP\u30a2\u30c9\u30ec\u30b9(cluster IP)\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b container-runtime node \u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u884c\u5f62\u614b\u3067\u591a\u304f\u306e\u5834\u5408\u306fDocker\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b kubectl client Kubernetes\u306eCLI\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 pause misc pod\u5185\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30afnamespace\u3092\u4fdd\u6301\u3059\u308b\u30b3\u30f3\u30c6\u30ca pod-master add-on High-Availability\u69cb\u6210\u6642\u306bscheduler, controller\u304c\u3069\u306eMaster\u3067\u52d5\u304f\u304b\u3092\u8abf\u6574\u3059\u308b\u30b3\u30f3\u30c6\u30ca kube-dns add-on \u30af\u30e9\u30b9\u30bf\u5185DNS\u306ePod SkyDNS add-on \u30af\u30e9\u30b9\u30bf\u5185DNS\u306eDNS\u30b5\u30fc\u30d0\u30fc kube2sky add-on SkyDNS\u306bKubernetes\u306e\u60c5\u5831\u3092\u53cd\u6620\u3055\u305b\u308b\u30d6\u30ea\u30c3\u30b8 heapster add-on Kuernetes\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u60c5\u5831\u3092\u96c6\u7d04\u3059\u308b\u4ed5\u7d44\u307f \u6ce8\u91c8 \u30de\u30fc\u30af\u306f\u5916\u90e8\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 # Master\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 # etcd # graph BT; subgraph master; A(kube-apiserver)-->E(etcd); end etcd\u306fKubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u6c38\u7d9a\u5316\u306b\u4f7f\u308f\u308c\u308b\u9ad8\u4fe1\u983c\u5206\u6563KVS\u3067\u3059\u3002etcd\u306fKubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u4ee5\u5916\u306b\u3082\u3001\u5f8c\u8ff0\u306eSkyDNS\u3001pod-master\u306a\u3069\u306e\u4fdd\u5b58\u306e\u7528\u9014\u306b\u3082\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059(etcd\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u4e00\u822c\u7684\u306b\u5225\u306b\u306a\u308a\u307e\u3059)\u3002 etcd\u306e\u30ad\u30fc\u306f\u30d1\u30b9\u5f62\u5f0f\u306b\u306a\u3063\u3066\u304a\u308a\u3001API Server\u306e --etcd-prefix \u30aa\u30d7\u30b7\u30e7\u30f3(\u30c7\u30d5\u30a9\u30eb\u30c8\u306f /registry )\u3067\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u3002\u307e\u305f --etcd-servers-overrides \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30ea\u30bd\u30fc\u30b9\u306e\u7a2e\u985e\u3054\u3068\u306betcd\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u5909\u3048\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u5927\u898f\u6a21\u74b0\u5883\u306b\u304a\u3044\u3066\u306fEvents\u30ea\u30bd\u30fc\u30b9\u306f\u91cf\u304c\u591a\u3044\u305f\u3081\u3001etcd\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5225\u306b\u3059\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306fKubernetes\u30de\u30cb\u30e5\u30a2\u30eb\u306e kube-apiserver \u3068 Using Large Clusters \u306e\u9805\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 etcd\u306fLinux\u30b3\u30f3\u30c6\u30ca\u5411\u3051distro\u306eCoreOS\u3092\u958b\u767a\u3059\u308b\u3001 CoreOS\u793e \u304c\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002 \u53c2\u8003 https://github.com/coreos/etcd Kubernetes\u306eSecret\u306f\u672c\u5f53\u306b\u5b89\u5168\u304b - Qiita Kubernetes Secrets \u306e\u7d39\u4ecb \u2013 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3084\u305d\u306e\u4ed6\u79d8\u5bc6\u60c5\u5831\u3092\u3069\u3053\u306b\u4fdd\u5b58\u3059\u308b\u304b\uff1f \u2013 \u3086\u3073\u3066\u304f \u53c2\u8003: etcd\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30eb # Kubernetes\u30ea\u30bd\u30fc\u30b9\u306eetcd\u306e\u30ad\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002 # etcd\u306e \"/registry\" \u4ee5\u4e0b\u306e\u30ad\u30fc\u540d\u3092\u8868\u793a $ etcdctl ls --recursive /registry # \u30b5\u30f3\u30d7\u30eb\u3092\u629c\u7c8b /registry/namespaces/default /registry/namespaces/kube-system /registry/secrets/default/default-token-qfomx /registry/secrets/kube-system/default-token-bf0m1 /registry/minions/172.17.4.101 /registry/minions/172.17.4.201 /registry/pods/kube-system/kube-controller-manager-172.17.4.101 /registry/pods/kube-system/heapster-v10-ut5ls value\u306b\u306f\u30ea\u30bd\u30fc\u30b9\u306eJSON\u6587\u5b57\u5217\u304c\u305d\u306e\u307e\u307e\u5165\u3063\u3066\u3044\u307e\u3059\u3002 $ etcdctl get /registry/ranges/serviceips | jq . { \"kind\": \"RangeAllocation\", \"apiVersion\": \"v1\", \"metadata\": { \"creationTimestamp\": null }, \"range\": \"10.3.0.0/24\", \"data\": \"IAAACAAAAAAIAAAAAAAAAAAAAAAAAAABAAAAAAADAQ==\" } kube-apiserver # graph BT; C(kubectl)-->A; subgraph master; A(kube-apiserver)-->E(etcd); S(kube-scheduler)-->A; M(kube-controller-manager)-->A; end; subgraph node; L(kubelet)-->A; P(kube-proxy)-->A; end; Kubernetes\u306eAPI\u30b5\u30fc\u30d0\u30fc\u3067\u3001\u4e3b\u306bKubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u60c5\u5831\u306e\u7ba1\u7406\u3092\u62c5\u3063\u3066\u3044\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u30ea\u30bd\u30fc\u30b9\u60c5\u5831\u306eCRUD\u51e6\u7406\u306e\u307f\u3092\u884c\u3044\u3001\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3059\u308b\u5b9f\u969b\u306e\u51e6\u7406\u3084\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u306f\u5225\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8( kube-controller-manager \u3068 kube-scheduler )\u304c\u884c\u3044\u307e\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u306e\u72b6\u614b\u306f\u3059\u3079\u3066etcd\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002API\u30b5\u30fc\u30d0\u30fc\u4ee5\u5916\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u76f4\u63a5etcd\u3092\u53c2\u7167\u305b\u305a\u3001API\u30b5\u30fc\u30d0\u30fc\u3092\u901a\u3057\u3066\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002 kubectl \u30b3\u30de\u30f3\u30c9\u3082\u3001API\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u901a\u3057\u3066\u64cd\u4f5c\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002 \u8a8d\u8a3c\u3001\u8a8d\u53ef\u306e\u4ed6\u306b\u3001Admission Control (\u53c2\u8003: Kubernetes: Admission Control\u3068\u306f\u4f55\u304b ) \u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u5236\u5fa1\u306e\u4ed5\u7d44\u307f\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002 \u6c34\u5e73\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3059\u3002 \u53c2\u8003 http://kubernetes.io/docs/admin/kube-apiserver/ kube-scheduler # \u65b0\u3057\u304f\u4f5c\u3089\u308c\u305fPod\u306e\u30ce\u30fc\u30c9\u3078\u306e\u5272\u308a\u5f53\u3066\u3092\u884c\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u3067\u3059\u3002Kubernetes API\u3092\u901a\u3057\u3066\u3001Pod, Node\u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u3092watch\u3057\u3001 bindings API \u3067Node\u3068Pod\u306e\u3072\u3082\u4ed8\u3051\u3092\u884c\u3044\u307e\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u30dd\u30ea\u30b7\u30fc\u306f\u8a2d\u5b9a\u53ef\u80fd\u3067\u3001 --policy-config-file \u3068\u3044\u3046\u8d77\u52d5\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u8a2d\u5b9a\u306ejson\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002(\u53c2\u8003: scheduler-policy-config.json ) Pod\u306e\u8981\u6c42\u3057\u3066\u3044\u308b\u30ea\u30bd\u30fc\u30b9\u3084Node\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u4f7f\u7528\u7387\u306a\u3069\u3092\u307f\u3066\u9069\u5207\u306aNode\u30921\u3064\u9078\u629e\u3057\u3001Pod\u3092Node\u306b\u7d10\u4ed8\u3051\u308b(\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3059\u308b)\u3002 \u53c2\u8003 https://github.com/kubernetes/kubernetes/blob/master/docs/devel/scheduler.md kube-controller-manager # Kubernetes\u306e\u5404\u7a2e\u30ea\u30bd\u30fc\u30b9\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3059\u308b\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3067\u3059\u3002 graph TD; A(kube-controller-manager)-->D(Deployment); A-->S(Service); A-->C(CronJob); A-->R(ReplicaSet); A-->X(...); \u5404\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306fgoroutine\u3067\u8d77\u52d5\u3055\u308c\u307e\u3059\u3002(\u53c2\u8003: controllermanager.go#L185-L390 )\u3002 Note Replication Controller\u306f\u30ea\u30bd\u30fc\u30b9\u540d\u81ea\u4f53\u306b\"Controller\"\u3068\u3064\u304f\u305f\u3081\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\"RepplicationManager\"\u3068\u3044\u3046\u540d\u524d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002(\u53c2\u8003: replication_controller.go#L63-L64\u306e\u30b3\u30e1\u30f3\u30c8 ) \u4e0b\u8a18\u306f kube-controller-manager \u3092pprof\u3067\u898b\u305f\u3001goroutine\u3067\u8d77\u52d5\u3059\u308b\u5404\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u95a2\u3059\u308b\u51e6\u7406\u306e\u4e00\u89a7\u3067\u3059\u3002 k8s.io/kubernetes/pkg/controller/daemon.(*DaemonSetsController).Run k8s.io/kubernetes/pkg/controller/deployment.(*DeploymentController).Run k8s.io/kubernetes/pkg/controller/endpoint.(*EndpointController).Run k8s.io/kubernetes/pkg/controller/gc.(*GCController).Run k8s.io/kubernetes/pkg/controller/job.(*JobController).Run k8s.io/kubernetes/pkg/controller/namespace.(*NamespaceController).Run k8s.io/kubernetes/pkg/controller/node.(*NodeController).Run k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeClaimBinder).Run k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeRecycler).Run k8s.io/kubernetes/pkg/controller/podautoscaler.(*HorizontalController).Run k8s.io/kubernetes/pkg/controller/replicaset.(*ReplicaSetController).Run k8s.io/kubernetes/pkg/controller/replication.(*ReplicationManager).Run k8s.io/kubernetes/pkg/controller/resourcequota.(*ResourceQuotaController).Run k8s.io/kubernetes/pkg/controller/serviceaccount.(*ServiceAccountsController).Run k8s.io/kubernetes/pkg/controller/serviceaccount.(*TokensController).Run \u53c2\u8003 http://kubernetes.io/docs/admin/kube-controller-manager/ Node\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 # kubelet # Quote kubelet \u306fPod\u3092\u8d77\u52d5\u3001\u7ba1\u7406\u3059\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3060\u3002 kube-scheduler \u306b\u3088\u3063\u3066\u7d10\u4ed8\u3051\u3089\u308c\u305f(\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f)Pod\u3092kubelet\u304c\u8a8d\u8b58\u3057\u3066\u3001\u305d\u306ePod\u3092\u81ea\u8eab\u306eNode\u3067\u8d77\u52d5\u3055\u305b\u308b\u3002 \u307e\u305f\u3001\u5b9f\u884c\u3057\u3066\u3044\u308bPod\u306e\u76e3\u8996\u30fb\u7ba1\u7406\u3082\u884c\u3046\u3002 \u306a\u306e\u3067\u3001\u5b9f\u969b\u306b\u30b3\u30f3\u30c6\u30ca\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u767a\u884c\u3057\u3066\u3044\u308b\u306e\u306f\u3053\u306e kubelet \u3060\u3002 kubelet\u306f\u5404\u30ce\u30fc\u30c9\u3067\u52d5\u4f5c\u3059\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u3001Node\u306e\u30e1\u30a4\u30f3\u51e6\u7406\u3067\u3042\u308bPod\u306e\u8d77\u52d5\u30fb\u7ba1\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u8d77\u52d5\u3059\u308bPod\u306e\u60c5\u5831\u306f\u3001API\u30b5\u30fc\u30d0\u30fc\u3092\u76e3\u8996\u3057\u3066\u81ea\u30ce\u30fc\u30c9\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u3082\u306e\u3092\u898b\u308b\u306e\u304c\u4e3b\u3067\u3059\u304c\u3001\u4ed6\u306b\u3082\u4e0b\u8a18\u306e3\u3064\u306e\u65b9\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3046\u3053\u3068\u3067API\u30b5\u30fc\u30d0\u30fc\u3092\u542b\u3080Master\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3082\u3001kubelet\u4e0a\u3067\u52d5\u4f5c\u3055\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb \u30ce\u30fc\u30c9\u306e\u7279\u5b9a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(\u4f8b\u3048\u3070 /etc/kubernetes/manifests )\u3092\u76e3\u8996\u3057\u3001\u305d\u3053\u306b\u7f6e\u304b\u308c\u305f\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304b\u308c\u305fPod\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u76e3\u8996\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f --config \u30aa\u30d7\u30b7\u30e7\u30f3\u3001\u76e3\u8996\u9593\u9694\u306f --file-check-frequency \u30aa\u30d7\u30b7\u30e7\u30f3(\u30c7\u30d5\u30a9\u30eb\u30c8\u306f20\u79d2)\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 HTTP\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u7279\u5b9a\u306eURL\u3092\u76e3\u8996\u3057\u3001\u305d\u3053\u306b\u7f6e\u304b\u308c\u305f\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304b\u308c\u305fPod\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u76e3\u8996\u3059\u308bURL\u306f --manifest-url \u30aa\u30d7\u30b7\u30e7\u30f3\u3001\u76e3\u8996\u9593\u9694\u306f --http-check-frequency= \u30aa\u30d7\u30b7\u30e7\u30f3(\u30c7\u30d5\u30a9\u30eb\u30c8\u306f20\u79d2)\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 HTTP\u30b5\u30fc\u30d0\u30fc Kubelet\u81ea\u4f53\u6301\u3064\u306eHTTP\u30b5\u30fc\u30d0\u30fc\u306b\u5bfe\u3057\u3066\u3001\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002 \u53c2\u8003 http://kubernetes.io/docs/admin/kubelet/ kube-proxy # kube-proxy\u306fKubernetes\u306eService\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5143\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3002 \u5b9f\u4f53\u306fiptables\u306e\u30eb\u30fc\u30eb\u3092\u767a\u884c\u3057\u3001\u30d1\u30b1\u30c3\u30c8\u306e\u5236\u5fa1\u3092\u884c\u3063\u3066\u3044\u308b\u3002 \u3053\u306e\u5b9f\u88c5\u306f\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u4ee5\u4e0b\u306e\u4e2d\u304b\u3089\u9078\u629e\u3067\u304d\u308b\u3002 userspace iptables ipvs(experimental) \u30c7\u30d5\u30a9\u30eb\u30c8\u3067iptables\u304c\u4f7f\u308f\u308c\u308b\u3002 \u53c2\u8003 http://kubernetes.io/docs/admin/kube-proxy/ Container Runtime # graph TB; subgraph node; L(kubelet)-->D(container-runtime); end Cotainer Runtime\u306fkubelet\u304b\u3089\u306e\u547c\u3073\u51fa\u3055\u308c\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u884c\u3092\u3059\u308b\u3002 Kubernetes\u3067\u306f\u3053\u306eContainer Runtime\u3092\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002 \u4ed6\u306eContainer Runtime\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308b\u3002 Docker containerd cri-o gVisor Kata Containers \u5927\u62b5\u306eKubernetes\u306e\u30de\u30cd\u30fc\u30b8\u30c9\u30b5\u30fc\u30d3\u30b9\u3067\u306fDocker\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3002 (\u5b9f\u969b\u306e\u6240Docker\u306e\u4e2d\u8eab\u306fcontainerd\u3060) \u305d\u306e\u4ed6\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 # Pause\u30b3\u30f3\u30c6\u30ca # Pause\u30b3\u30f3\u30c6\u30ca\u306fPod\u5185\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u7279\u5225\u306a\u30b3\u30f3\u30c6\u30ca\u3067\u3001\u3059\u3079\u3066\u306ePod\u306b\u81ea\u52d5\u7684\u306b\u4ed8\u52a0\u3055\u308c\u307e\u3059\u3002Kubernetes\u5185\u90e8\u3067\u306f PodInfraContainerImage \u3068\u3044\u3046\u5b9a\u6570\u3067\u7279\u5225\u6271\u3044\u3055\u308c\u3066\u304a\u308a\u3001Pause\u30b3\u30f3\u30c6\u30ca\u3060\u3051\u304cPod\u5185\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3001\u4ed6\u306e\u30b3\u30f3\u30c6\u30ca\u306f\u305d\u308c\u3092\u5171\u6709\u3059\u308b\u65b9\u5f0f\u3092\u53d6\u3063\u3066\u3044\u307e\u3059\u3002(\u53c2\u8003: pkg/kubelet/dockertools/manager.go )\u3002\u3053\u308c\u306b\u3088\u308aPod\u306e\u4ed6\u306e\u30b3\u30f3\u30c6\u30ca\u304ckill\u3055\u308c\u305f\u3068\u3057\u3066\u3082\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Pause\u30b3\u30f3\u30c6\u30ca\u81ea\u4f53\u306f\u6587\u5b57\u901a\u308apause\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u4f55\u3082\u3057\u307e\u305b\u3093\u3002(\u53c2\u8003: pause.asm#L47 )\u3002Pause\u30b3\u30f3\u30c6\u30ca\u306fkubelet\u306e --pod-infra-container-image \u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30a4\u30e1\u30fc\u30b8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u53c2\u8003 https://github.com/kubernetes/kubernetes/tree/master/third_party/pause Containers at Google > What is the role of 'pause' container? Add-on\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 # pod-master # pod-master\u306fHigh-Availability\u69cb\u6210\u6642\u306b kube-scheduler , kube-controller-manager \u304c\u3069\u306eMaster\u3067\u52d5\u304f\u304b\u3092\u8abf\u6574\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u3067\u3059\u3002etcd\u3092\u4f7f\u3063\u3066\u30ed\u30c3\u30af\u3092\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u4ed5\u7d44\u307f\u3067\u3001200\u884c\u7a0b\u5ea6\u306ego\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059(\u53c2\u8003 podmaster.go )\u3002\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3057\u305fMaster\u30b5\u30fc\u30d0\u30fc\u304c\u30ed\u30fc\u30ab\u30eb\u306e\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u53cd\u6620\u3055\u305b\u308b\u3068\u3044\u3046\u3084\u308a\u65b9\u3067\u3001\u3069\u306eMaster\u3067 kube-scheduler \u3001 kube-controller-manager \u3092\u52d5\u304b\u3059\u304b\u8abf\u6574\u3057\u3066\u3044\u307e\u3059\u3002kubernetes\u30ec\u30dd\u30b8\u30c8\u30ea\u306e docs/admin/high-availability \u306e podmaster.yaml \u306e\u8a2d\u5b9a\u4f8b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002 kube-scheduler , kube-controller-manager \u81ea\u4f53\u306b\u3082\u30ea\u30fc\u30c0\u30fc\u9078\u51fa\u306e\u6a5f\u80fd( --leader-elect \u30aa\u30d7\u30b7\u30e7\u30f3)\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u4eca\u5f8c\u306f\u4e0d\u8981\u306b\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002(\u53c2\u8003 pkg/client/leaderelection ) \u53c2\u8003 https://github.com/kubernetes/contrib/tree/master/pod-master http://kubernetes.io/docs/admin/high-availability/ Issue: leaderelection: retrofit controller-manager with leaderelection client #19621 Issue: retrofit the scheduler with the leader election client. #19347 kube-dns # kube-dns \u306f\u30af\u30e9\u30b9\u30bf\u5185DNS\u306ePod\u306e\u540d\u524d\u3067\u3059\u3002Service\u30ea\u30bd\u30fc\u30b9\u304c\u4f5c\u3089\u308c\u305f\u6642\u3001kube-dns\u306b\u767b\u9332\u3055\u308c\u3001\u30af\u30e9\u30b9\u30bf\u5185\u90e8\u304b\u3089\u540d\u524d\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f cluster.local \u3068\u3044\u3046\u30c9\u30e1\u30a4\u30f3\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002Service\u306f {Service\u540d}.{\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9}.svc.cluster.local \u3068\u3044\u3046\u5f62\u5f0f\u306eFQDN\u3067A\u30ec\u30b3\u30fc\u30c9\u3001SRV\u30ec\u30b3\u30fc\u30c9\u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002 kube-dns\u306ePod\u306f\u4ee5\u4e0b\u306e4\u30b3\u30f3\u30c6\u30ca\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002 skydns DNS\u30b5\u30fc\u30d0\u30fc etcd skydns\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u5c02\u7528etcd kube2sky SkyDNS\u306bKubernetes\u306e\u60c5\u5831\u3092\u53cd\u6620\u3055\u305b\u308b\u30d6\u30ea\u30c3\u30b8 healthz \u5b9a\u671f\u7684\u306bnslookup\u3057\u3066\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046 \u53c2\u8003 https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns http://kubernetes.io/docs/admin/dns/ SkyDNS # \u30af\u30e9\u30b9\u30bf\u5185\u306eDNS\u3068\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u308bDNS\u30b5\u30fc\u30d0\u30fc\u3067\u3059(kube-dns\u306e\u4e00\u90e8)\u3002\u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u306b\u306fetcd\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u53c2\u8003 https://github.com/skynetservices/skydns kube2sky # SkyDNS\u306bKubernetes\u306e\u60c5\u5831\u3092\u53cd\u6620\u3055\u305b\u308b\u30d6\u30ea\u30c3\u30b8\u3067\u3059\u3002Kubernetes\u306eAPI\u3067Service, Endpoints, Pod\u3092watch\u3057\u3001SkyDNS\u306eetcd\u306b\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067DNS\u306e\u60c5\u5831\u3092\u53cd\u6620\u3055\u305b\u307e\u3059\u3002 \u53c2\u8003 https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns/kube2sky heapster # heapster\u306f\u30af\u30e9\u30b9\u30bf\u5168\u4f53\u306e\u4f7f\u7528\u72b6\u6cc1\u3092\u96c6\u7d04\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3059\u3002\u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u30d7\u30e9\u30ac\u30d6\u30eb\u306a\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u304a\u308a\u3001InfluxDB, Google Cloud Monitoring, Kafka\u306a\u3069\u8907\u6570\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 https://github.com/kubernetes/heapster http://blog.kubernetes.io/2015/05/resource-usage-monitoring-kubernetes.html \u53c2\u8003 # Kubernetes\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 - Kubernetes Kubernetes\u9053\u5834 24\u65e5\u76ee - Kubernetes\u306e\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3064\u3044\u3066 - Toku's Blog Kubernetes: \u69cb\u6210\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u4e00\u89a7 - Qiita \u8ee2\u8077\u3057\u305f\u3089 Kubernetes \u3060\u3063\u305f\u4ef6 / That Time I Changed Jobs as a Kubernetes. - Speaker Deck","title":"Conponents"},{"location":"concepts/kubernetes/components/#kubernetes","text":"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u7a2e\u5225 \u8aac\u660e etcd master Kubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u6c38\u7d9a\u5316\u306b\u4f7f\u308f\u308c\u308b\u9ad8\u4fe1\u983c\u5206\u6563KVS kube-apiserver master Kubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3059\u308bAPI\u30b5\u30fc\u30d0\u30fc kube-scheduler master Pod\u306e\u30ce\u30fc\u30c9\u3078\u306e\u5272\u308a\u5f53\u3066\u3092\u884c\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc kube-controller-manager master Replication Controller\u306a\u3069\u306e\u5404\u7a2e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3057\u7ba1\u7406\u3059\u308b\u30de\u30cd\u30fc\u30b8\u30e3\u30fc kubelet node Pod\u3092\u8d77\u52d5\u3057\u7ba1\u7406\u3059\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8(Node\u306e\u30e1\u30a4\u30f3\u51e6\u7406) kube-proxy node Kubernetes\u306eService\u304c\u6301\u3064\u4eee\u60f3\u7684\u306aIP\u30a2\u30c9\u30ec\u30b9(cluster IP)\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b container-runtime node \u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u884c\u5f62\u614b\u3067\u591a\u304f\u306e\u5834\u5408\u306fDocker\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b kubectl client Kubernetes\u306eCLI\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 pause misc pod\u5185\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30afnamespace\u3092\u4fdd\u6301\u3059\u308b\u30b3\u30f3\u30c6\u30ca pod-master add-on High-Availability\u69cb\u6210\u6642\u306bscheduler, controller\u304c\u3069\u306eMaster\u3067\u52d5\u304f\u304b\u3092\u8abf\u6574\u3059\u308b\u30b3\u30f3\u30c6\u30ca kube-dns add-on \u30af\u30e9\u30b9\u30bf\u5185DNS\u306ePod SkyDNS add-on \u30af\u30e9\u30b9\u30bf\u5185DNS\u306eDNS\u30b5\u30fc\u30d0\u30fc kube2sky add-on SkyDNS\u306bKubernetes\u306e\u60c5\u5831\u3092\u53cd\u6620\u3055\u305b\u308b\u30d6\u30ea\u30c3\u30b8 heapster add-on Kuernetes\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u60c5\u5831\u3092\u96c6\u7d04\u3059\u308b\u4ed5\u7d44\u307f \u6ce8\u91c8 \u30de\u30fc\u30af\u306f\u5916\u90e8\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8","title":"Kubernetes\u3092\u69cb\u6210\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u90e1"},{"location":"concepts/kubernetes/components/#_1","text":"","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3"},{"location":"concepts/kubernetes/components/#master","text":"","title":"Master\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"},{"location":"concepts/kubernetes/components/#etcd","text":"graph BT; subgraph master; A(kube-apiserver)-->E(etcd); end etcd\u306fKubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u6c38\u7d9a\u5316\u306b\u4f7f\u308f\u308c\u308b\u9ad8\u4fe1\u983c\u5206\u6563KVS\u3067\u3059\u3002etcd\u306fKubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u4ee5\u5916\u306b\u3082\u3001\u5f8c\u8ff0\u306eSkyDNS\u3001pod-master\u306a\u3069\u306e\u4fdd\u5b58\u306e\u7528\u9014\u306b\u3082\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059(etcd\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u4e00\u822c\u7684\u306b\u5225\u306b\u306a\u308a\u307e\u3059)\u3002 etcd\u306e\u30ad\u30fc\u306f\u30d1\u30b9\u5f62\u5f0f\u306b\u306a\u3063\u3066\u304a\u308a\u3001API Server\u306e --etcd-prefix \u30aa\u30d7\u30b7\u30e7\u30f3(\u30c7\u30d5\u30a9\u30eb\u30c8\u306f /registry )\u3067\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u3002\u307e\u305f --etcd-servers-overrides \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30ea\u30bd\u30fc\u30b9\u306e\u7a2e\u985e\u3054\u3068\u306betcd\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u5909\u3048\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u5927\u898f\u6a21\u74b0\u5883\u306b\u304a\u3044\u3066\u306fEvents\u30ea\u30bd\u30fc\u30b9\u306f\u91cf\u304c\u591a\u3044\u305f\u3081\u3001etcd\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5225\u306b\u3059\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306fKubernetes\u30de\u30cb\u30e5\u30a2\u30eb\u306e kube-apiserver \u3068 Using Large Clusters \u306e\u9805\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 etcd\u306fLinux\u30b3\u30f3\u30c6\u30ca\u5411\u3051distro\u306eCoreOS\u3092\u958b\u767a\u3059\u308b\u3001 CoreOS\u793e \u304c\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002 \u53c2\u8003 https://github.com/coreos/etcd Kubernetes\u306eSecret\u306f\u672c\u5f53\u306b\u5b89\u5168\u304b - Qiita Kubernetes Secrets \u306e\u7d39\u4ecb \u2013 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3084\u305d\u306e\u4ed6\u79d8\u5bc6\u60c5\u5831\u3092\u3069\u3053\u306b\u4fdd\u5b58\u3059\u308b\u304b\uff1f \u2013 \u3086\u3073\u3066\u304f","title":"etcd"},{"location":"concepts/kubernetes/components/#etcd_1","text":"Kubernetes\u30ea\u30bd\u30fc\u30b9\u306eetcd\u306e\u30ad\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002 # etcd\u306e \"/registry\" \u4ee5\u4e0b\u306e\u30ad\u30fc\u540d\u3092\u8868\u793a $ etcdctl ls --recursive /registry # \u30b5\u30f3\u30d7\u30eb\u3092\u629c\u7c8b /registry/namespaces/default /registry/namespaces/kube-system /registry/secrets/default/default-token-qfomx /registry/secrets/kube-system/default-token-bf0m1 /registry/minions/172.17.4.101 /registry/minions/172.17.4.201 /registry/pods/kube-system/kube-controller-manager-172.17.4.101 /registry/pods/kube-system/heapster-v10-ut5ls value\u306b\u306f\u30ea\u30bd\u30fc\u30b9\u306eJSON\u6587\u5b57\u5217\u304c\u305d\u306e\u307e\u307e\u5165\u3063\u3066\u3044\u307e\u3059\u3002 $ etcdctl get /registry/ranges/serviceips | jq . { \"kind\": \"RangeAllocation\", \"apiVersion\": \"v1\", \"metadata\": { \"creationTimestamp\": null }, \"range\": \"10.3.0.0/24\", \"data\": \"IAAACAAAAAAIAAAAAAAAAAAAAAAAAAABAAAAAAADAQ==\" }","title":"\u53c2\u8003: etcd\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30eb"},{"location":"concepts/kubernetes/components/#kube-apiserver","text":"graph BT; C(kubectl)-->A; subgraph master; A(kube-apiserver)-->E(etcd); S(kube-scheduler)-->A; M(kube-controller-manager)-->A; end; subgraph node; L(kubelet)-->A; P(kube-proxy)-->A; end; Kubernetes\u306eAPI\u30b5\u30fc\u30d0\u30fc\u3067\u3001\u4e3b\u306bKubernetes\u306e\u30ea\u30bd\u30fc\u30b9\u60c5\u5831\u306e\u7ba1\u7406\u3092\u62c5\u3063\u3066\u3044\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u30ea\u30bd\u30fc\u30b9\u60c5\u5831\u306eCRUD\u51e6\u7406\u306e\u307f\u3092\u884c\u3044\u3001\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3059\u308b\u5b9f\u969b\u306e\u51e6\u7406\u3084\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u306f\u5225\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8( kube-controller-manager \u3068 kube-scheduler )\u304c\u884c\u3044\u307e\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u306e\u72b6\u614b\u306f\u3059\u3079\u3066etcd\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002API\u30b5\u30fc\u30d0\u30fc\u4ee5\u5916\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u76f4\u63a5etcd\u3092\u53c2\u7167\u305b\u305a\u3001API\u30b5\u30fc\u30d0\u30fc\u3092\u901a\u3057\u3066\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002 kubectl \u30b3\u30de\u30f3\u30c9\u3082\u3001API\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u901a\u3057\u3066\u64cd\u4f5c\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002 \u8a8d\u8a3c\u3001\u8a8d\u53ef\u306e\u4ed6\u306b\u3001Admission Control (\u53c2\u8003: Kubernetes: Admission Control\u3068\u306f\u4f55\u304b ) \u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u5236\u5fa1\u306e\u4ed5\u7d44\u307f\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002 \u6c34\u5e73\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3059\u3002 \u53c2\u8003 http://kubernetes.io/docs/admin/kube-apiserver/","title":"kube-apiserver"},{"location":"concepts/kubernetes/components/#kube-scheduler","text":"\u65b0\u3057\u304f\u4f5c\u3089\u308c\u305fPod\u306e\u30ce\u30fc\u30c9\u3078\u306e\u5272\u308a\u5f53\u3066\u3092\u884c\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u3067\u3059\u3002Kubernetes API\u3092\u901a\u3057\u3066\u3001Pod, Node\u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u3092watch\u3057\u3001 bindings API \u3067Node\u3068Pod\u306e\u3072\u3082\u4ed8\u3051\u3092\u884c\u3044\u307e\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u30dd\u30ea\u30b7\u30fc\u306f\u8a2d\u5b9a\u53ef\u80fd\u3067\u3001 --policy-config-file \u3068\u3044\u3046\u8d77\u52d5\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u8a2d\u5b9a\u306ejson\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002(\u53c2\u8003: scheduler-policy-config.json ) Pod\u306e\u8981\u6c42\u3057\u3066\u3044\u308b\u30ea\u30bd\u30fc\u30b9\u3084Node\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u4f7f\u7528\u7387\u306a\u3069\u3092\u307f\u3066\u9069\u5207\u306aNode\u30921\u3064\u9078\u629e\u3057\u3001Pod\u3092Node\u306b\u7d10\u4ed8\u3051\u308b(\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3059\u308b)\u3002 \u53c2\u8003 https://github.com/kubernetes/kubernetes/blob/master/docs/devel/scheduler.md","title":"kube-scheduler"},{"location":"concepts/kubernetes/components/#kube-controller-manager","text":"Kubernetes\u306e\u5404\u7a2e\u30ea\u30bd\u30fc\u30b9\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3059\u308b\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3067\u3059\u3002 graph TD; A(kube-controller-manager)-->D(Deployment); A-->S(Service); A-->C(CronJob); A-->R(ReplicaSet); A-->X(...); \u5404\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306fgoroutine\u3067\u8d77\u52d5\u3055\u308c\u307e\u3059\u3002(\u53c2\u8003: controllermanager.go#L185-L390 )\u3002 Note Replication Controller\u306f\u30ea\u30bd\u30fc\u30b9\u540d\u81ea\u4f53\u306b\"Controller\"\u3068\u3064\u304f\u305f\u3081\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\"RepplicationManager\"\u3068\u3044\u3046\u540d\u524d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002(\u53c2\u8003: replication_controller.go#L63-L64\u306e\u30b3\u30e1\u30f3\u30c8 ) \u4e0b\u8a18\u306f kube-controller-manager \u3092pprof\u3067\u898b\u305f\u3001goroutine\u3067\u8d77\u52d5\u3059\u308b\u5404\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u95a2\u3059\u308b\u51e6\u7406\u306e\u4e00\u89a7\u3067\u3059\u3002 k8s.io/kubernetes/pkg/controller/daemon.(*DaemonSetsController).Run k8s.io/kubernetes/pkg/controller/deployment.(*DeploymentController).Run k8s.io/kubernetes/pkg/controller/endpoint.(*EndpointController).Run k8s.io/kubernetes/pkg/controller/gc.(*GCController).Run k8s.io/kubernetes/pkg/controller/job.(*JobController).Run k8s.io/kubernetes/pkg/controller/namespace.(*NamespaceController).Run k8s.io/kubernetes/pkg/controller/node.(*NodeController).Run k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeClaimBinder).Run k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeRecycler).Run k8s.io/kubernetes/pkg/controller/podautoscaler.(*HorizontalController).Run k8s.io/kubernetes/pkg/controller/replicaset.(*ReplicaSetController).Run k8s.io/kubernetes/pkg/controller/replication.(*ReplicationManager).Run k8s.io/kubernetes/pkg/controller/resourcequota.(*ResourceQuotaController).Run k8s.io/kubernetes/pkg/controller/serviceaccount.(*ServiceAccountsController).Run k8s.io/kubernetes/pkg/controller/serviceaccount.(*TokensController).Run \u53c2\u8003 http://kubernetes.io/docs/admin/kube-controller-manager/","title":"kube-controller-manager"},{"location":"concepts/kubernetes/components/#node","text":"","title":"Node\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"},{"location":"concepts/kubernetes/components/#kubelet","text":"Quote kubelet \u306fPod\u3092\u8d77\u52d5\u3001\u7ba1\u7406\u3059\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3060\u3002 kube-scheduler \u306b\u3088\u3063\u3066\u7d10\u4ed8\u3051\u3089\u308c\u305f(\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f)Pod\u3092kubelet\u304c\u8a8d\u8b58\u3057\u3066\u3001\u305d\u306ePod\u3092\u81ea\u8eab\u306eNode\u3067\u8d77\u52d5\u3055\u305b\u308b\u3002 \u307e\u305f\u3001\u5b9f\u884c\u3057\u3066\u3044\u308bPod\u306e\u76e3\u8996\u30fb\u7ba1\u7406\u3082\u884c\u3046\u3002 \u306a\u306e\u3067\u3001\u5b9f\u969b\u306b\u30b3\u30f3\u30c6\u30ca\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u767a\u884c\u3057\u3066\u3044\u308b\u306e\u306f\u3053\u306e kubelet \u3060\u3002 kubelet\u306f\u5404\u30ce\u30fc\u30c9\u3067\u52d5\u4f5c\u3059\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u3001Node\u306e\u30e1\u30a4\u30f3\u51e6\u7406\u3067\u3042\u308bPod\u306e\u8d77\u52d5\u30fb\u7ba1\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u8d77\u52d5\u3059\u308bPod\u306e\u60c5\u5831\u306f\u3001API\u30b5\u30fc\u30d0\u30fc\u3092\u76e3\u8996\u3057\u3066\u81ea\u30ce\u30fc\u30c9\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u3082\u306e\u3092\u898b\u308b\u306e\u304c\u4e3b\u3067\u3059\u304c\u3001\u4ed6\u306b\u3082\u4e0b\u8a18\u306e3\u3064\u306e\u65b9\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3046\u3053\u3068\u3067API\u30b5\u30fc\u30d0\u30fc\u3092\u542b\u3080Master\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3082\u3001kubelet\u4e0a\u3067\u52d5\u4f5c\u3055\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb \u30ce\u30fc\u30c9\u306e\u7279\u5b9a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(\u4f8b\u3048\u3070 /etc/kubernetes/manifests )\u3092\u76e3\u8996\u3057\u3001\u305d\u3053\u306b\u7f6e\u304b\u308c\u305f\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304b\u308c\u305fPod\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u76e3\u8996\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f --config \u30aa\u30d7\u30b7\u30e7\u30f3\u3001\u76e3\u8996\u9593\u9694\u306f --file-check-frequency \u30aa\u30d7\u30b7\u30e7\u30f3(\u30c7\u30d5\u30a9\u30eb\u30c8\u306f20\u79d2)\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 HTTP\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u7279\u5b9a\u306eURL\u3092\u76e3\u8996\u3057\u3001\u305d\u3053\u306b\u7f6e\u304b\u308c\u305f\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304b\u308c\u305fPod\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u76e3\u8996\u3059\u308bURL\u306f --manifest-url \u30aa\u30d7\u30b7\u30e7\u30f3\u3001\u76e3\u8996\u9593\u9694\u306f --http-check-frequency= \u30aa\u30d7\u30b7\u30e7\u30f3(\u30c7\u30d5\u30a9\u30eb\u30c8\u306f20\u79d2)\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 HTTP\u30b5\u30fc\u30d0\u30fc Kubelet\u81ea\u4f53\u6301\u3064\u306eHTTP\u30b5\u30fc\u30d0\u30fc\u306b\u5bfe\u3057\u3066\u3001\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002 \u53c2\u8003 http://kubernetes.io/docs/admin/kubelet/","title":"kubelet"},{"location":"concepts/kubernetes/components/#kube-proxy","text":"kube-proxy\u306fKubernetes\u306eService\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5143\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3002 \u5b9f\u4f53\u306fiptables\u306e\u30eb\u30fc\u30eb\u3092\u767a\u884c\u3057\u3001\u30d1\u30b1\u30c3\u30c8\u306e\u5236\u5fa1\u3092\u884c\u3063\u3066\u3044\u308b\u3002 \u3053\u306e\u5b9f\u88c5\u306f\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u4ee5\u4e0b\u306e\u4e2d\u304b\u3089\u9078\u629e\u3067\u304d\u308b\u3002 userspace iptables ipvs(experimental) \u30c7\u30d5\u30a9\u30eb\u30c8\u3067iptables\u304c\u4f7f\u308f\u308c\u308b\u3002 \u53c2\u8003 http://kubernetes.io/docs/admin/kube-proxy/","title":"kube-proxy"},{"location":"concepts/kubernetes/components/#container-runtime","text":"graph TB; subgraph node; L(kubelet)-->D(container-runtime); end Cotainer Runtime\u306fkubelet\u304b\u3089\u306e\u547c\u3073\u51fa\u3055\u308c\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u884c\u3092\u3059\u308b\u3002 Kubernetes\u3067\u306f\u3053\u306eContainer Runtime\u3092\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002 \u4ed6\u306eContainer Runtime\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308b\u3002 Docker containerd cri-o gVisor Kata Containers \u5927\u62b5\u306eKubernetes\u306e\u30de\u30cd\u30fc\u30b8\u30c9\u30b5\u30fc\u30d3\u30b9\u3067\u306fDocker\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3002 (\u5b9f\u969b\u306e\u6240Docker\u306e\u4e2d\u8eab\u306fcontainerd\u3060)","title":"Container Runtime"},{"location":"concepts/kubernetes/components/#_2","text":"","title":"\u305d\u306e\u4ed6\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"},{"location":"concepts/kubernetes/components/#pause","text":"Pause\u30b3\u30f3\u30c6\u30ca\u306fPod\u5185\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u7279\u5225\u306a\u30b3\u30f3\u30c6\u30ca\u3067\u3001\u3059\u3079\u3066\u306ePod\u306b\u81ea\u52d5\u7684\u306b\u4ed8\u52a0\u3055\u308c\u307e\u3059\u3002Kubernetes\u5185\u90e8\u3067\u306f PodInfraContainerImage \u3068\u3044\u3046\u5b9a\u6570\u3067\u7279\u5225\u6271\u3044\u3055\u308c\u3066\u304a\u308a\u3001Pause\u30b3\u30f3\u30c6\u30ca\u3060\u3051\u304cPod\u5185\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3001\u4ed6\u306e\u30b3\u30f3\u30c6\u30ca\u306f\u305d\u308c\u3092\u5171\u6709\u3059\u308b\u65b9\u5f0f\u3092\u53d6\u3063\u3066\u3044\u307e\u3059\u3002(\u53c2\u8003: pkg/kubelet/dockertools/manager.go )\u3002\u3053\u308c\u306b\u3088\u308aPod\u306e\u4ed6\u306e\u30b3\u30f3\u30c6\u30ca\u304ckill\u3055\u308c\u305f\u3068\u3057\u3066\u3082\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Pause\u30b3\u30f3\u30c6\u30ca\u81ea\u4f53\u306f\u6587\u5b57\u901a\u308apause\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u4f55\u3082\u3057\u307e\u305b\u3093\u3002(\u53c2\u8003: pause.asm#L47 )\u3002Pause\u30b3\u30f3\u30c6\u30ca\u306fkubelet\u306e --pod-infra-container-image \u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30a4\u30e1\u30fc\u30b8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u53c2\u8003 https://github.com/kubernetes/kubernetes/tree/master/third_party/pause Containers at Google > What is the role of 'pause' container?","title":"Pause\u30b3\u30f3\u30c6\u30ca"},{"location":"concepts/kubernetes/components/#add-on","text":"","title":"Add-on\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"},{"location":"concepts/kubernetes/components/#pod-master","text":"pod-master\u306fHigh-Availability\u69cb\u6210\u6642\u306b kube-scheduler , kube-controller-manager \u304c\u3069\u306eMaster\u3067\u52d5\u304f\u304b\u3092\u8abf\u6574\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u3067\u3059\u3002etcd\u3092\u4f7f\u3063\u3066\u30ed\u30c3\u30af\u3092\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u4ed5\u7d44\u307f\u3067\u3001200\u884c\u7a0b\u5ea6\u306ego\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059(\u53c2\u8003 podmaster.go )\u3002\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3057\u305fMaster\u30b5\u30fc\u30d0\u30fc\u304c\u30ed\u30fc\u30ab\u30eb\u306e\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u53cd\u6620\u3055\u305b\u308b\u3068\u3044\u3046\u3084\u308a\u65b9\u3067\u3001\u3069\u306eMaster\u3067 kube-scheduler \u3001 kube-controller-manager \u3092\u52d5\u304b\u3059\u304b\u8abf\u6574\u3057\u3066\u3044\u307e\u3059\u3002kubernetes\u30ec\u30dd\u30b8\u30c8\u30ea\u306e docs/admin/high-availability \u306e podmaster.yaml \u306e\u8a2d\u5b9a\u4f8b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002 kube-scheduler , kube-controller-manager \u81ea\u4f53\u306b\u3082\u30ea\u30fc\u30c0\u30fc\u9078\u51fa\u306e\u6a5f\u80fd( --leader-elect \u30aa\u30d7\u30b7\u30e7\u30f3)\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u4eca\u5f8c\u306f\u4e0d\u8981\u306b\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002(\u53c2\u8003 pkg/client/leaderelection ) \u53c2\u8003 https://github.com/kubernetes/contrib/tree/master/pod-master http://kubernetes.io/docs/admin/high-availability/ Issue: leaderelection: retrofit controller-manager with leaderelection client #19621 Issue: retrofit the scheduler with the leader election client. #19347","title":"pod-master"},{"location":"concepts/kubernetes/components/#kube-dns","text":"kube-dns \u306f\u30af\u30e9\u30b9\u30bf\u5185DNS\u306ePod\u306e\u540d\u524d\u3067\u3059\u3002Service\u30ea\u30bd\u30fc\u30b9\u304c\u4f5c\u3089\u308c\u305f\u6642\u3001kube-dns\u306b\u767b\u9332\u3055\u308c\u3001\u30af\u30e9\u30b9\u30bf\u5185\u90e8\u304b\u3089\u540d\u524d\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f cluster.local \u3068\u3044\u3046\u30c9\u30e1\u30a4\u30f3\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002Service\u306f {Service\u540d}.{\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9}.svc.cluster.local \u3068\u3044\u3046\u5f62\u5f0f\u306eFQDN\u3067A\u30ec\u30b3\u30fc\u30c9\u3001SRV\u30ec\u30b3\u30fc\u30c9\u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002 kube-dns\u306ePod\u306f\u4ee5\u4e0b\u306e4\u30b3\u30f3\u30c6\u30ca\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002 skydns DNS\u30b5\u30fc\u30d0\u30fc etcd skydns\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u5c02\u7528etcd kube2sky SkyDNS\u306bKubernetes\u306e\u60c5\u5831\u3092\u53cd\u6620\u3055\u305b\u308b\u30d6\u30ea\u30c3\u30b8 healthz \u5b9a\u671f\u7684\u306bnslookup\u3057\u3066\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046 \u53c2\u8003 https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns http://kubernetes.io/docs/admin/dns/","title":"kube-dns"},{"location":"concepts/kubernetes/components/#skydns","text":"\u30af\u30e9\u30b9\u30bf\u5185\u306eDNS\u3068\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u308bDNS\u30b5\u30fc\u30d0\u30fc\u3067\u3059(kube-dns\u306e\u4e00\u90e8)\u3002\u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u306b\u306fetcd\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u53c2\u8003 https://github.com/skynetservices/skydns","title":"SkyDNS"},{"location":"concepts/kubernetes/components/#kube2sky","text":"SkyDNS\u306bKubernetes\u306e\u60c5\u5831\u3092\u53cd\u6620\u3055\u305b\u308b\u30d6\u30ea\u30c3\u30b8\u3067\u3059\u3002Kubernetes\u306eAPI\u3067Service, Endpoints, Pod\u3092watch\u3057\u3001SkyDNS\u306eetcd\u306b\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067DNS\u306e\u60c5\u5831\u3092\u53cd\u6620\u3055\u305b\u307e\u3059\u3002 \u53c2\u8003 https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns/kube2sky","title":"kube2sky"},{"location":"concepts/kubernetes/components/#heapster","text":"heapster\u306f\u30af\u30e9\u30b9\u30bf\u5168\u4f53\u306e\u4f7f\u7528\u72b6\u6cc1\u3092\u96c6\u7d04\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3059\u3002\u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u30d7\u30e9\u30ac\u30d6\u30eb\u306a\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u304a\u308a\u3001InfluxDB, Google Cloud Monitoring, Kafka\u306a\u3069\u8907\u6570\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 https://github.com/kubernetes/heapster http://blog.kubernetes.io/2015/05/resource-usage-monitoring-kubernetes.html","title":"heapster"},{"location":"concepts/kubernetes/components/#_3","text":"Kubernetes\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 - Kubernetes Kubernetes\u9053\u5834 24\u65e5\u76ee - Kubernetes\u306e\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3064\u3044\u3066 - Toku's Blog Kubernetes: \u69cb\u6210\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u4e00\u89a7 - Qiita \u8ee2\u8077\u3057\u305f\u3089 Kubernetes \u3060\u3063\u305f\u4ef6 / That Time I Changed Jobs as a Kubernetes. - Speaker Deck","title":"\u53c2\u8003"},{"location":"concepts/kubernetes/healthcheck/","text":"Kubernetes\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af # Kubernetes\u306b\u306f\u30b3\u30f3\u30c6\u30ca\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af(Probe)\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002 LivenessProbe ReadinessProbe \u3053\u306e2\u7a2e\u985e\u306eProbe\u306e\u5f79\u5272\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u3053\u3046\u3002 LivenessProbe\u306b\u3064\u3044\u3066 # LivenessProbe\u306f\u30b3\u30f3\u30c6\u30ca\u304c\u751f\u5b58\u3057\u3066\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002 \u4f8b\u3048\u3070\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u5fdc\u7b54\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u969b\u306a\u3069\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002 \u3053\u306eLivenessProbe\u304c\u901a\u3089\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30ca\u306f\u518d\u4f5c\u6210\u3055\u308c\u308b\u3002 \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u306b\u306a\u308b\u3002 ReadinessProbe\u306b\u3064\u3044\u3066 # ReadinessProbe\u306f\u30b3\u30f3\u30c6\u30ca\u304c\u6e96\u5099\u3067\u304d\u3066\u3044\u308b(Ready)\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002 \u4f8b\u3048\u3070\u521d\u671f\u306e\u30ed\u30fc\u30c9\u51e6\u7406\u3084\u91cd\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u4e2d\u3067\u5225\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u8fd4\u305b\u306a\u3044\u5834\u5408\u306a\u3069\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002 \u3053\u306eReadinessProbe\u304c\u901a\u3089\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u3001Service\u304b\u3089\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u5bfe\u8c61\u304b\u3089\u5916\u3055\u308c\u308b\u3002 \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u306b\u306a\u308b\u3002 Probe\u306e\u7a2e\u985e # Probe\u306e\u624b\u6bb5\u3068\u3057\u30663\u3064\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002 exec httpGet tcpSocket exec # exec \u306f\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 command \u306b\u30ea\u30b9\u30c8\u3067\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002 \u30b3\u30de\u30f3\u30c9\u306e\u7d42\u4e86\u30b9\u30c6\u30fc\u30bf\u30b9\u304c0\u306e\u5834\u5408\u306fhealthy\u30010\u4ee5\u5916\u306e\u5834\u5408unhealthy\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002 \u4f8b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002 exec : command : [ \"test\" , \"-e\" , \"/config\" ] httpGet # httpGet \u306fHTTP\u306eGET\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u884c\u3059\u308b\u3002 \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30b9\u30c6\u30fc\u30bf\u30b9\u304c200\u304b\u3089300\u756a\u53f0\u306e\u5834\u5408\u306fhealthy\u3001\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408unhealthy\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002 host : \u63a5\u7d9a\u5148\u3092\u6307\u5b9a\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fPod\u306eIP\u30a2\u30c9\u30ec\u30b9\u3060\u3002\u5fc5\u8981\u306a\u5834\u5408 httpHeaders \u3067 Host \u30d8\u30c3\u30c0\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3002 httpHeaders : \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u969b\u306e\u30d8\u30c3\u30c0\u30fc\u3092\u6307\u5b9a\u3002 name \u306b\u30d8\u30c3\u30c0\u30fc\u540d\u3001 value \u306b\u5024\u3092\u6307\u5b9a\u3059\u308b\u3002 path : \u30ea\u30af\u30a8\u30b9\u30c8\u306ePath\u3092\u6307\u5b9a\u3059\u308b\u3002 port : \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u969b\u306ePort\u3092\u6307\u5b9a\u3059\u308b\u3002\u30dd\u30fc\u30c8\u756a\u53f7\u304b\u540d\u524d\u4ed8\u304d\u306e\u30dd\u30fc\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002 scheme : \u63a5\u7d9a\u3059\u308b\u969b\u306e\u30b9\u30ad\u30fc\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002 HTTP \u304b HTTPS \u3092\u6307\u5b9a\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f HTTP \u3002 \u4f8b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002 httpGet : path : /healthz port : 8080 httpHeaders : - name : Host value : www.example.local tcpSocket # tcpSocket \u306fTCP\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002 \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u78ba\u7acb\u3067\u304d\u305f\u5834\u5408\u306fhealthy\u3001\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306funhealthy\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002 host : \u63a5\u7d9a\u5148\u3092\u6307\u5b9a\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fPod\u306eIP\u30a2\u30c9\u30ec\u30b9\u3060\u3002 port : \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u969b\u306ePort\u3092\u6307\u5b9a\u3059\u308b\u3002\u30dd\u30fc\u30c8\u756a\u53f7\u304b\u540d\u524d\u4ed8\u304d\u306e\u30dd\u30fc\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002 \u4f8b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002 tcpSocket : port : 6379 \u305d\u306e\u4ed6\u306e\u30d1\u30e9\u30e1\u30fc\u30bf # initialDelaySeconds : \u30b3\u30f3\u30c6\u30ca\u304c\u958b\u59cb\u3057\u3066\u304b\u3089Probe\u3092\u884c\u3046\u307e\u3067\u306e\u521d\u671f\u9045\u5ef6\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3059\u308b\u3002 timeoutSeconds : Probe\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f1\u79d2\u3060\u3002 periodSeconds : Probe\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f10\u79d2\u3067\u6700\u5c0f\u306e\u5024\u306f1\u79d2\u3060\u3002 successThreshold : Probe\u304c\u6210\u529f\u3057\u305f\u3068\u5224\u65ad\u3059\u308b\u6700\u5c0f\u56de\u6570\u3092\u6307\u5b9a\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f1\u56de\u3060\u3002 failureThreshold : Probe\u304c\u5931\u6557\u3057\u305f\u3068\u5224\u65ad\u3059\u308b\u6700\u5c0f\u56de\u6570\u3092\u6307\u5b9a\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f3\u56de\u3060\u3002 Probe\u3092\u4f7f\u3063\u3066\u307f\u308b # LivenessProbe\u3092\u4f7f\u3063\u3066\u307f\u308b # \u4ee5\u4e0b\u306e\u3088\u3046\u306aPod\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002 apiVersion : v1 kind : Pod metadata : name : liveness-check spec : containers : - image : nginx name : nginx livenessProbe : httpGet : port : 80 path : / failureThreshold : 5 periodSeconds : 5 Manifest\u3092\u9069\u7528\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl apply -f liveness-check.yaml pod \"liveness-check\" created \u3053\u3053\u3067\u4f5c\u6210\u3057\u305fPod\u306eDescribe\u3092\u898b\u3066\u307f\u308b\u3002 kubectl describe \u3067\u78ba\u8a8d\u3067\u304d\u308b\u3002 $ kubectl describe po/liveness-check Name: liveness-check Namespace: default Priority: 0 PriorityClassName: <none> Node: minikube/10.0.2.15 Start Time: Mon, 10 Dec 2018 20:43:58 +0900 Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration={\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"name\":\"liveness-check\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"ngin x\",\"liv... Status: Running IP: 172.17.0.2 Containers: nginx: Container ID: docker://b7eccef5eb68b2876ee449dbe3e178ba91f022c048e3160d96f9b35df74059eb Image: nginx Image ID: docker-pullable://nginx@sha256:5d32f60db294b5deb55d078cd4feb410ad88e6fe77500c87d3970eca97f54dba Port: <none> Host Port: <none> State: Running Started: Mon, 10 Dec 2018 20:44:02 +0900 Ready: True Restart Count: 0 Liveness: http-get http://:80/ delay=0s timeout=1s period=5s #success=1 #failure=5 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-zr2xd (ro) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-zr2xd: Type: Secret (a volume populated by a Secret) SecretName: default-token-zr2xd Optional: false QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 1m default-scheduler Successfully assigned default/liveness-check to minikube Normal Pulling 1m kubelet, minikube pulling image \"nginx\" Normal Pulled 1m kubelet, minikube Successfully pulled image \"nginx\" Normal Created 1m kubelet, minikube Created container Normal Started 1m kubelet, minikube Started container \u91cd\u8981\u306a\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u90e8\u5206\u3002 Liveness: http-get http://:80/ delay=0s timeout=1s period=5s #success=1 #failure=5 LivenessProbe\u304c\u8a2d\u5b9a\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002 \u3055\u3066\u3001 /usr/share/nginx/html/index.html \u3092\u524a\u9664\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl exec liveness-check -- rm /usr/share/nginx/html/index.html Describe\u3092\u78ba\u8a8d\u3059\u308b\u3068Probe\u304c\u5931\u6557\u3057\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308b\u3002 $ kubectl describe po/liveness-check | tail node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 23s default-scheduler Successfully assigned default/liveness-check to minikube Normal Pulling 23s kubelet, minikube pulling image \"nginx\" Normal Pulled 19s kubelet, minikube Successfully pulled image \"nginx\" Normal Created 19s kubelet, minikube Created container Normal Started 19s kubelet, minikube Started container Warning Unhealthy 1s kubelet, minikube Liveness probe failed: HTTP probe failed with statuscode: 403 \u3057\u3070\u3089\u304f\u3059\u308b\u3068\u30b3\u30f3\u30c6\u30ca\u304c\u518d\u4f5c\u6210\u3055\u308c\u308b\u3002 $ kubectl describe po/liveness-check | tail Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 1m default-scheduler Successfully assigned default/liveness-check to minikube Normal Pulling 39s (x2 over 1m) kubelet, minikube pulling image \"nginx\" Warning Unhealthy 39s (x5 over 59s) kubelet, minikube Liveness probe failed: HTTP probe failed with statuscode: 403 Normal Killing 39s kubelet, minikube Killing container with id docker://nginx:Container failed liveness probe.. Container will be killed and recreated. Normal Pulled 36s (x2 over 1m) kubelet, minikube Successfully pulled image \"nginx\" Normal Created 36s (x2 over 1m) kubelet, minikube Created container Normal Started 36s (x2 over 1m) kubelet, minikube Started container \u3053\u308c\u304cLivenessProbe\u306e\u52d5\u304d\u3060\u3002LivenessProbe\u304c\u5931\u6557\u3059\u308b\u3068\u30b3\u30f3\u30c6\u30ca\u304cKill\u3055\u308c\u3001\u518d\u5ea6\u4f5c\u6210\u3055\u308c\u3066\u8d77\u52d5\u3057\u3066\u304f\u308b\u3002 ReadinessProbe\u3092\u4f7f\u3063\u3066\u307f\u308b # \u4ee5\u4e0b\u306e\u3088\u3046\u306aPod\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002 apiVersion : v1 kind : Pod metadata : name : readiness-check labels : app : nginx spec : containers : - image : nginx name : nginx readinessProbe : httpGet : port : 80 path : / failureThreshold : 1 periodSeconds : 1 Manifest\u3092\u9069\u7528\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl apply -f readiness-check.yaml pod \"readiness-check\" created \u305d\u3057\u3066\u3053\u306ePod\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308bService\u3092\u4f5c\u6210\u3059\u308b\u3002 apiVersion : v1 kind : Service metadata : name : readiness-check-svc spec : selector : app : nginx ports : - port : 80 \u4e0a\u8a18\u306eManifest\u3092\u4f5c\u6210\u3059\u308b\u3002 $ kubectl apply -f readiness-check-svc.yaml service \"readiness-check-svc\" created Describe\u3067Pod\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl describe po/readiness-check Name: readiness-check Namespace: default Priority: 0 PriorityClassName: <none> Node: minikube/10.0.2.15 Start Time: Mon, 10 Dec 2018 21:07:07 +0900 Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration={\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"name\":\"readiness-check\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"na... Status: Running IP: 172.17.0.2 Containers: nginx: Container ID: docker://aec2021f817fa9b8ee38b054545726a7f85bb00c09dd03f3e203b04a51487ed7 Image: nginx Image ID: docker-pullable://nginx@sha256:5d32f60db294b5deb55d078cd4feb410ad88e6fe77500c87d3970eca97f54dba Port: <none> Host Port: <none> State: Running Started: Mon, 10 Dec 2018 21:07:11 +0900 Ready: True Restart Count: 0 Readiness: http-get http://:80/ delay=0s timeout=1s period=1s #success=1 #failure=1 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-zr2xd (ro) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-zr2xd: Type: Secret (a volume populated by a Secret) SecretName: default-token-zr2xd Optional: false QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 2m default-scheduler Successfully assigned default/readiness-check to minikube Normal Pulling 2m kubelet, minikube pulling image \"nginx\" Normal Pulled 2m kubelet, minikube Successfully pulled image \"nginx\" Normal Created 2m kubelet, minikube Created container Normal Started 2m kubelet, minikube Started container ReadinessProbe\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002 Service\u304b\u3089\u8aac\u5f97\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u3088\u3046\u3002 / # wget -O - -T 1 readiness-check-svc Connecting to readiness-check-svc (10.105.40.233:80) <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href=\"http://nginx.org/\">nginx.org</a>.<br/> Commercial support is available at <a href=\"http://nginx.com/\">nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> - 100% |**************************| 612 0:00:00 ETA / # exit Session ended, resume using 'kubectl attach alpine-7bd47f56bc-kr789 -c alpi ne-i -t' command when the pod is running \u5225\u306ePod\u304b\u3089Service\u306b\u5bfe\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u3063\u3066\u63a5\u7d9a\u3067\u304d\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u305f\u3002 \u3055\u3066\u3001\u5148\u307b\u3069\u3068\u540c\u3058\u3088\u3046\u306b /usr/share/nginx/html/index.html \u3092\u524a\u9664\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl exec readiness-check -- rm /usr/share/nginx/html/index.html \u3057\u3070\u3089\u304f\u3059\u308b\u3068ReadinessCheck\u304c\u5931\u6557\u3057\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002 $ kubectl describe po/readiness-check | tail node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 5m default-scheduler Successfully assigned default/readiness-check to minikube Normal Pulling 5m kubelet, minikube pulling image \"nginx\" Normal Pulled 5m kubelet, minikube Successfully pulled image \"nginx\" Normal Created 5m kubelet, minikube Created container Normal Started 5m kubelet, minikube Started container Warning Unhealthy 23s (x23 over 45s) kubelet, minikube Readiness probe failed: HTTP probe failed with statuscode: 403 \u5148\u7a0b\u3068\u540c\u3058\u3088\u3046\u306bService\u3092\u7d4c\u7531\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl run -it --rm alpine --image alpine -- ash If you don't see a command prompt, try pressing enter. / # wget -O - -T 1 readiness-check-svc Connecting to readiness-check-svc (10.105.40.233:80) wget: download timed out / # exit Session ended, resume using 'kubectl attach alpine-7bd47f56bc-j88tr -c alpi ne -i -t' command when the pod is running Timeout\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3002 ReadinessProbe\u304c\u901a\u308b\u3088\u3046\u306b /usr/share/nginx/html/index.html \u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3088\u3046\u3002 $ kubectl exec readiness-check -- sh -c 'echo ok > /usr/share/nginx/html/index.html' \u5c11\u3057\u3057\u3066\u304b\u3089\u518d\u5ea6Service\u3092\u7d4c\u7531\u3057\u305f\u30a2\u30af\u30bb\u30b9\u3092\u3057\u3066\u307f\u308b\u3002 $ kubectl run -it --rm alpine --image alpine -- ash If you don't see a command prompt, try pressing enter. / # wget -O - -T 1 readiness-check-svc Connecting to readiness-check-svc (10.105.40.233:80) ok - 100% |**************************| 3 0:00:00 ETA Service\u3092\u7d4c\u7531\u3057\u3066\u306e\u30a2\u30af\u30bb\u30b9\u304c\u6210\u529f\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002 \u3053\u306e\u3088\u3046\u306bReadinessProbe\u306fUnhealthy\u306b\u306a\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3092Service\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u5bfe\u8c61\u304b\u3089\u5916\u3059\u3002 \u518d\u3073Healthy\u306b\u306a\u3063\u305f\u969b\u306f\u518d\u5ea6\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u5bfe\u8c61\u3068\u306a\u308a\u3001Service\u304b\u3089\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002 \u53c2\u8003 # Kubernetes\u9053\u5834 10\u65e5\u76ee - LivenessProbe / ReadinessProbe\u306b\u3064\u3044\u3066 - Toku's Blog Pod\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb - Kubernetes Configure Liveness, Readiness and Startup Probes - Kubernetes kubernetes\u3067\u52d5\u304b\u3059\u30b3\u30f3\u30c6\u30ca\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af - Qiita Kubernetes \u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af(Liveness Probe,Readiness Probe)\u3092\u691c\u8a3c\u3059\u308b - Qiita Kubernetes\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3067\u4f7f\u3046Liveness Probe\u3068Readiness Probe\u306b\u3064\u3044\u3066 - \u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30fc\u30f3\u30a8\u30f3\u30b8\u30cb\u30a2\u3068\u3057\u3066\u751f\u304d\u308b kubernetes - k8s - livenessProbe vs readinessProbe - Stack Overflow Kubernetes\u3067liveness/readinessProbe\u306eexec command\u304c\u5b9f\u884c\u3055\u308c\u308b\u6d41\u308c - sambaiz-net Kubernetes best practices: Setting up health checks with readiness and liveness probes | Google Cloud Blog Kubernetes Ingress\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306bReadiness Probe\u3092\u4f7f\u3046 - \u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30fc\u30f3\u30a8\u30f3\u30b8\u30cb\u30a2\u3068\u3057\u3066\u751f\u304d\u308b Kubernetes\u306eLiveness Probe\u3068Readiness Probe\u306e\u4f7f\u3044\u5206\u3051\u3092\u8003\u3048\u305f\u3051\u3069\u7d50\u5c40\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u3084 - Mitsuyuki.Shiiba","title":"Health Check"},{"location":"concepts/kubernetes/healthcheck/#kubernetes","text":"Kubernetes\u306b\u306f\u30b3\u30f3\u30c6\u30ca\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af(Probe)\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002 LivenessProbe ReadinessProbe \u3053\u306e2\u7a2e\u985e\u306eProbe\u306e\u5f79\u5272\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u3053\u3046\u3002","title":"Kubernetes\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af"},{"location":"concepts/kubernetes/healthcheck/#livenessprobe","text":"LivenessProbe\u306f\u30b3\u30f3\u30c6\u30ca\u304c\u751f\u5b58\u3057\u3066\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002 \u4f8b\u3048\u3070\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u5fdc\u7b54\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u969b\u306a\u3069\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002 \u3053\u306eLivenessProbe\u304c\u901a\u3089\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30ca\u306f\u518d\u4f5c\u6210\u3055\u308c\u308b\u3002 \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u306b\u306a\u308b\u3002","title":"LivenessProbe\u306b\u3064\u3044\u3066"},{"location":"concepts/kubernetes/healthcheck/#readinessprobe","text":"ReadinessProbe\u306f\u30b3\u30f3\u30c6\u30ca\u304c\u6e96\u5099\u3067\u304d\u3066\u3044\u308b(Ready)\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002 \u4f8b\u3048\u3070\u521d\u671f\u306e\u30ed\u30fc\u30c9\u51e6\u7406\u3084\u91cd\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u4e2d\u3067\u5225\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u8fd4\u305b\u306a\u3044\u5834\u5408\u306a\u3069\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002 \u3053\u306eReadinessProbe\u304c\u901a\u3089\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u3001Service\u304b\u3089\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u5bfe\u8c61\u304b\u3089\u5916\u3055\u308c\u308b\u3002 \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u306b\u306a\u308b\u3002","title":"ReadinessProbe\u306b\u3064\u3044\u3066"},{"location":"concepts/kubernetes/healthcheck/#probe","text":"Probe\u306e\u624b\u6bb5\u3068\u3057\u30663\u3064\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002 exec httpGet tcpSocket","title":"Probe\u306e\u7a2e\u985e"},{"location":"concepts/kubernetes/healthcheck/#exec","text":"exec \u306f\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 command \u306b\u30ea\u30b9\u30c8\u3067\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002 \u30b3\u30de\u30f3\u30c9\u306e\u7d42\u4e86\u30b9\u30c6\u30fc\u30bf\u30b9\u304c0\u306e\u5834\u5408\u306fhealthy\u30010\u4ee5\u5916\u306e\u5834\u5408unhealthy\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002 \u4f8b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002 exec : command : [ \"test\" , \"-e\" , \"/config\" ]","title":"exec"},{"location":"concepts/kubernetes/healthcheck/#httpget","text":"httpGet \u306fHTTP\u306eGET\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u884c\u3059\u308b\u3002 \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30b9\u30c6\u30fc\u30bf\u30b9\u304c200\u304b\u3089300\u756a\u53f0\u306e\u5834\u5408\u306fhealthy\u3001\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408unhealthy\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002 host : \u63a5\u7d9a\u5148\u3092\u6307\u5b9a\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fPod\u306eIP\u30a2\u30c9\u30ec\u30b9\u3060\u3002\u5fc5\u8981\u306a\u5834\u5408 httpHeaders \u3067 Host \u30d8\u30c3\u30c0\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3002 httpHeaders : \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u969b\u306e\u30d8\u30c3\u30c0\u30fc\u3092\u6307\u5b9a\u3002 name \u306b\u30d8\u30c3\u30c0\u30fc\u540d\u3001 value \u306b\u5024\u3092\u6307\u5b9a\u3059\u308b\u3002 path : \u30ea\u30af\u30a8\u30b9\u30c8\u306ePath\u3092\u6307\u5b9a\u3059\u308b\u3002 port : \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u969b\u306ePort\u3092\u6307\u5b9a\u3059\u308b\u3002\u30dd\u30fc\u30c8\u756a\u53f7\u304b\u540d\u524d\u4ed8\u304d\u306e\u30dd\u30fc\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002 scheme : \u63a5\u7d9a\u3059\u308b\u969b\u306e\u30b9\u30ad\u30fc\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002 HTTP \u304b HTTPS \u3092\u6307\u5b9a\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f HTTP \u3002 \u4f8b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002 httpGet : path : /healthz port : 8080 httpHeaders : - name : Host value : www.example.local","title":"httpGet"},{"location":"concepts/kubernetes/healthcheck/#tcpsocket","text":"tcpSocket \u306fTCP\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u30aa\u30fc\u30d7\u30f3\u3067\u304d\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002 \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u78ba\u7acb\u3067\u304d\u305f\u5834\u5408\u306fhealthy\u3001\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306funhealthy\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002 host : \u63a5\u7d9a\u5148\u3092\u6307\u5b9a\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fPod\u306eIP\u30a2\u30c9\u30ec\u30b9\u3060\u3002 port : \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u969b\u306ePort\u3092\u6307\u5b9a\u3059\u308b\u3002\u30dd\u30fc\u30c8\u756a\u53f7\u304b\u540d\u524d\u4ed8\u304d\u306e\u30dd\u30fc\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3002 \u4f8b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002 tcpSocket : port : 6379","title":"tcpSocket"},{"location":"concepts/kubernetes/healthcheck/#_1","text":"initialDelaySeconds : \u30b3\u30f3\u30c6\u30ca\u304c\u958b\u59cb\u3057\u3066\u304b\u3089Probe\u3092\u884c\u3046\u307e\u3067\u306e\u521d\u671f\u9045\u5ef6\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3059\u308b\u3002 timeoutSeconds : Probe\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f1\u79d2\u3060\u3002 periodSeconds : Probe\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f10\u79d2\u3067\u6700\u5c0f\u306e\u5024\u306f1\u79d2\u3060\u3002 successThreshold : Probe\u304c\u6210\u529f\u3057\u305f\u3068\u5224\u65ad\u3059\u308b\u6700\u5c0f\u56de\u6570\u3092\u6307\u5b9a\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f1\u56de\u3060\u3002 failureThreshold : Probe\u304c\u5931\u6557\u3057\u305f\u3068\u5224\u65ad\u3059\u308b\u6700\u5c0f\u56de\u6570\u3092\u6307\u5b9a\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f3\u56de\u3060\u3002","title":"\u305d\u306e\u4ed6\u306e\u30d1\u30e9\u30e1\u30fc\u30bf"},{"location":"concepts/kubernetes/healthcheck/#probe_1","text":"","title":"Probe\u3092\u4f7f\u3063\u3066\u307f\u308b"},{"location":"concepts/kubernetes/healthcheck/#livenessprobe_1","text":"\u4ee5\u4e0b\u306e\u3088\u3046\u306aPod\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002 apiVersion : v1 kind : Pod metadata : name : liveness-check spec : containers : - image : nginx name : nginx livenessProbe : httpGet : port : 80 path : / failureThreshold : 5 periodSeconds : 5 Manifest\u3092\u9069\u7528\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl apply -f liveness-check.yaml pod \"liveness-check\" created \u3053\u3053\u3067\u4f5c\u6210\u3057\u305fPod\u306eDescribe\u3092\u898b\u3066\u307f\u308b\u3002 kubectl describe \u3067\u78ba\u8a8d\u3067\u304d\u308b\u3002 $ kubectl describe po/liveness-check Name: liveness-check Namespace: default Priority: 0 PriorityClassName: <none> Node: minikube/10.0.2.15 Start Time: Mon, 10 Dec 2018 20:43:58 +0900 Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration={\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"name\":\"liveness-check\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"ngin x\",\"liv... Status: Running IP: 172.17.0.2 Containers: nginx: Container ID: docker://b7eccef5eb68b2876ee449dbe3e178ba91f022c048e3160d96f9b35df74059eb Image: nginx Image ID: docker-pullable://nginx@sha256:5d32f60db294b5deb55d078cd4feb410ad88e6fe77500c87d3970eca97f54dba Port: <none> Host Port: <none> State: Running Started: Mon, 10 Dec 2018 20:44:02 +0900 Ready: True Restart Count: 0 Liveness: http-get http://:80/ delay=0s timeout=1s period=5s #success=1 #failure=5 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-zr2xd (ro) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-zr2xd: Type: Secret (a volume populated by a Secret) SecretName: default-token-zr2xd Optional: false QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 1m default-scheduler Successfully assigned default/liveness-check to minikube Normal Pulling 1m kubelet, minikube pulling image \"nginx\" Normal Pulled 1m kubelet, minikube Successfully pulled image \"nginx\" Normal Created 1m kubelet, minikube Created container Normal Started 1m kubelet, minikube Started container \u91cd\u8981\u306a\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u90e8\u5206\u3002 Liveness: http-get http://:80/ delay=0s timeout=1s period=5s #success=1 #failure=5 LivenessProbe\u304c\u8a2d\u5b9a\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002 \u3055\u3066\u3001 /usr/share/nginx/html/index.html \u3092\u524a\u9664\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl exec liveness-check -- rm /usr/share/nginx/html/index.html Describe\u3092\u78ba\u8a8d\u3059\u308b\u3068Probe\u304c\u5931\u6557\u3057\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308b\u3002 $ kubectl describe po/liveness-check | tail node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 23s default-scheduler Successfully assigned default/liveness-check to minikube Normal Pulling 23s kubelet, minikube pulling image \"nginx\" Normal Pulled 19s kubelet, minikube Successfully pulled image \"nginx\" Normal Created 19s kubelet, minikube Created container Normal Started 19s kubelet, minikube Started container Warning Unhealthy 1s kubelet, minikube Liveness probe failed: HTTP probe failed with statuscode: 403 \u3057\u3070\u3089\u304f\u3059\u308b\u3068\u30b3\u30f3\u30c6\u30ca\u304c\u518d\u4f5c\u6210\u3055\u308c\u308b\u3002 $ kubectl describe po/liveness-check | tail Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 1m default-scheduler Successfully assigned default/liveness-check to minikube Normal Pulling 39s (x2 over 1m) kubelet, minikube pulling image \"nginx\" Warning Unhealthy 39s (x5 over 59s) kubelet, minikube Liveness probe failed: HTTP probe failed with statuscode: 403 Normal Killing 39s kubelet, minikube Killing container with id docker://nginx:Container failed liveness probe.. Container will be killed and recreated. Normal Pulled 36s (x2 over 1m) kubelet, minikube Successfully pulled image \"nginx\" Normal Created 36s (x2 over 1m) kubelet, minikube Created container Normal Started 36s (x2 over 1m) kubelet, minikube Started container \u3053\u308c\u304cLivenessProbe\u306e\u52d5\u304d\u3060\u3002LivenessProbe\u304c\u5931\u6557\u3059\u308b\u3068\u30b3\u30f3\u30c6\u30ca\u304cKill\u3055\u308c\u3001\u518d\u5ea6\u4f5c\u6210\u3055\u308c\u3066\u8d77\u52d5\u3057\u3066\u304f\u308b\u3002","title":"LivenessProbe\u3092\u4f7f\u3063\u3066\u307f\u308b"},{"location":"concepts/kubernetes/healthcheck/#readinessprobe_1","text":"\u4ee5\u4e0b\u306e\u3088\u3046\u306aPod\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002 apiVersion : v1 kind : Pod metadata : name : readiness-check labels : app : nginx spec : containers : - image : nginx name : nginx readinessProbe : httpGet : port : 80 path : / failureThreshold : 1 periodSeconds : 1 Manifest\u3092\u9069\u7528\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl apply -f readiness-check.yaml pod \"readiness-check\" created \u305d\u3057\u3066\u3053\u306ePod\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308bService\u3092\u4f5c\u6210\u3059\u308b\u3002 apiVersion : v1 kind : Service metadata : name : readiness-check-svc spec : selector : app : nginx ports : - port : 80 \u4e0a\u8a18\u306eManifest\u3092\u4f5c\u6210\u3059\u308b\u3002 $ kubectl apply -f readiness-check-svc.yaml service \"readiness-check-svc\" created Describe\u3067Pod\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl describe po/readiness-check Name: readiness-check Namespace: default Priority: 0 PriorityClassName: <none> Node: minikube/10.0.2.15 Start Time: Mon, 10 Dec 2018 21:07:07 +0900 Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration={\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"name\":\"readiness-check\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"na... Status: Running IP: 172.17.0.2 Containers: nginx: Container ID: docker://aec2021f817fa9b8ee38b054545726a7f85bb00c09dd03f3e203b04a51487ed7 Image: nginx Image ID: docker-pullable://nginx@sha256:5d32f60db294b5deb55d078cd4feb410ad88e6fe77500c87d3970eca97f54dba Port: <none> Host Port: <none> State: Running Started: Mon, 10 Dec 2018 21:07:11 +0900 Ready: True Restart Count: 0 Readiness: http-get http://:80/ delay=0s timeout=1s period=1s #success=1 #failure=1 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-zr2xd (ro) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-zr2xd: Type: Secret (a volume populated by a Secret) SecretName: default-token-zr2xd Optional: false QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 2m default-scheduler Successfully assigned default/readiness-check to minikube Normal Pulling 2m kubelet, minikube pulling image \"nginx\" Normal Pulled 2m kubelet, minikube Successfully pulled image \"nginx\" Normal Created 2m kubelet, minikube Created container Normal Started 2m kubelet, minikube Started container ReadinessProbe\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002 Service\u304b\u3089\u8aac\u5f97\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u3088\u3046\u3002 / # wget -O - -T 1 readiness-check-svc Connecting to readiness-check-svc (10.105.40.233:80) <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href=\"http://nginx.org/\">nginx.org</a>.<br/> Commercial support is available at <a href=\"http://nginx.com/\">nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> - 100% |**************************| 612 0:00:00 ETA / # exit Session ended, resume using 'kubectl attach alpine-7bd47f56bc-kr789 -c alpi ne-i -t' command when the pod is running \u5225\u306ePod\u304b\u3089Service\u306b\u5bfe\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u3063\u3066\u63a5\u7d9a\u3067\u304d\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u305f\u3002 \u3055\u3066\u3001\u5148\u307b\u3069\u3068\u540c\u3058\u3088\u3046\u306b /usr/share/nginx/html/index.html \u3092\u524a\u9664\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl exec readiness-check -- rm /usr/share/nginx/html/index.html \u3057\u3070\u3089\u304f\u3059\u308b\u3068ReadinessCheck\u304c\u5931\u6557\u3057\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002 $ kubectl describe po/readiness-check | tail node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 5m default-scheduler Successfully assigned default/readiness-check to minikube Normal Pulling 5m kubelet, minikube pulling image \"nginx\" Normal Pulled 5m kubelet, minikube Successfully pulled image \"nginx\" Normal Created 5m kubelet, minikube Created container Normal Started 5m kubelet, minikube Started container Warning Unhealthy 23s (x23 over 45s) kubelet, minikube Readiness probe failed: HTTP probe failed with statuscode: 403 \u5148\u7a0b\u3068\u540c\u3058\u3088\u3046\u306bService\u3092\u7d4c\u7531\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u3088\u3046\u3002 $ kubectl run -it --rm alpine --image alpine -- ash If you don't see a command prompt, try pressing enter. / # wget -O - -T 1 readiness-check-svc Connecting to readiness-check-svc (10.105.40.233:80) wget: download timed out / # exit Session ended, resume using 'kubectl attach alpine-7bd47f56bc-j88tr -c alpi ne -i -t' command when the pod is running Timeout\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3002 ReadinessProbe\u304c\u901a\u308b\u3088\u3046\u306b /usr/share/nginx/html/index.html \u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3088\u3046\u3002 $ kubectl exec readiness-check -- sh -c 'echo ok > /usr/share/nginx/html/index.html' \u5c11\u3057\u3057\u3066\u304b\u3089\u518d\u5ea6Service\u3092\u7d4c\u7531\u3057\u305f\u30a2\u30af\u30bb\u30b9\u3092\u3057\u3066\u307f\u308b\u3002 $ kubectl run -it --rm alpine --image alpine -- ash If you don't see a command prompt, try pressing enter. / # wget -O - -T 1 readiness-check-svc Connecting to readiness-check-svc (10.105.40.233:80) ok - 100% |**************************| 3 0:00:00 ETA Service\u3092\u7d4c\u7531\u3057\u3066\u306e\u30a2\u30af\u30bb\u30b9\u304c\u6210\u529f\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002 \u3053\u306e\u3088\u3046\u306bReadinessProbe\u306fUnhealthy\u306b\u306a\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3092Service\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u5bfe\u8c61\u304b\u3089\u5916\u3059\u3002 \u518d\u3073Healthy\u306b\u306a\u3063\u305f\u969b\u306f\u518d\u5ea6\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u5bfe\u8c61\u3068\u306a\u308a\u3001Service\u304b\u3089\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002","title":"ReadinessProbe\u3092\u4f7f\u3063\u3066\u307f\u308b"},{"location":"concepts/kubernetes/healthcheck/#_2","text":"Kubernetes\u9053\u5834 10\u65e5\u76ee - LivenessProbe / ReadinessProbe\u306b\u3064\u3044\u3066 - Toku's Blog Pod\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb - Kubernetes Configure Liveness, Readiness and Startup Probes - Kubernetes kubernetes\u3067\u52d5\u304b\u3059\u30b3\u30f3\u30c6\u30ca\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af - Qiita Kubernetes \u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af(Liveness Probe,Readiness Probe)\u3092\u691c\u8a3c\u3059\u308b - Qiita Kubernetes\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3067\u4f7f\u3046Liveness Probe\u3068Readiness Probe\u306b\u3064\u3044\u3066 - \u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30fc\u30f3\u30a8\u30f3\u30b8\u30cb\u30a2\u3068\u3057\u3066\u751f\u304d\u308b kubernetes - k8s - livenessProbe vs readinessProbe - Stack Overflow Kubernetes\u3067liveness/readinessProbe\u306eexec command\u304c\u5b9f\u884c\u3055\u308c\u308b\u6d41\u308c - sambaiz-net Kubernetes best practices: Setting up health checks with readiness and liveness probes | Google Cloud Blog Kubernetes Ingress\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306bReadiness Probe\u3092\u4f7f\u3046 - \u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30fc\u30f3\u30a8\u30f3\u30b8\u30cb\u30a2\u3068\u3057\u3066\u751f\u304d\u308b Kubernetes\u306eLiveness Probe\u3068Readiness Probe\u306e\u4f7f\u3044\u5206\u3051\u3092\u8003\u3048\u305f\u3051\u3069\u7d50\u5c40\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u3084 - Mitsuyuki.Shiiba","title":"\u53c2\u8003"},{"location":"concepts/kubernetes/helm/","text":"Helm \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9 # Kubernetes \u306e\u554f\u984c\u306e\uff11\u3064\u306b\u3001 \u30de\u30cb\u30d5\u30a7\u30b9\u30c8 \u30d5\u30a1\u30a4\u30eb\u304c\u305f\u304f\u3055\u3093\u3067\u304d\u308b YAML\u306e\u58c1 \u3068\u547c\u3070\u308c\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 image mount\u3059\u308b\u30d5\u30a1\u30a4\u30eb label \u30ea\u30bd\u30fc\u30b9\u5272\u5f53 \u3068\u3044\u3063\u305f\u4e00\u90e8\u306e\u8981\u7d20\u3060\u3051\u5909\u3048\u305f\u3044\u6642\u3001\u307b\u3068\u3093\u3069\u69cb\u6210\u306f\u540c\u3058\u3067\u4f3c\u305f\u3088\u3046\u306a \u30de\u30cb\u30d5\u30a7\u30b9\u30c8 \u30d5\u30a1\u30a4\u30eb\u304c\u5927\u91cf\u306b\u51fa\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u305d\u3057\u3066\u305d\u3046\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u5f80\u3005\u306b\u3057\u3066\u7ba1\u7406\u3055\u308c\u305a\u8ca0\u50b5\u3068\u306a\u3063\u3066\u3044\u304d\u307e\u3059\u3002 \u305d\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306e\u304cHelm\u3068\u3044\u3046 Kubernetes \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3067\u3059\u3002 \u5171\u901a\u90e8\u5206\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5316\u3057\u3001\u53ef\u5909\u90e8\u5206\u3092\u5909\u6570\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u4eca\u56de\u306f\u305d\u306eHelm\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 Helm\u3092\u30b7\u30b9\u30c6\u30e0 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u306f\u4ee5\u4e0b\u3067\u3059\u3002 ref: Simplifying App Deployment in Kubernetes with Helm Charts \u56f3\u304b\u3089\u308f\u304b\u308b\u3088\u3046\u306bTiller\u3068\u547c\u3070\u308c\u308b\u30b5\u30fc\u30d0\u304c Kubernetes Cluster\u5185\u3067\u8d77\u52d5\u3057\u3001 api -server\u3092\u30b3\u30fc\u30eb\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3044\u307e\u3059\u3002 \u899a\u3048\u3066\u304a\u3044\u305f\u65b9\u304c\u3088\u3044\u5358\u8a9e\u306f\u4ee5\u4e0b\u3067\u3059\u3002 \u7528\u8a9e \u8aac\u660e Chart Helm\u3067\u5229\u7528\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 Tiller Kubernetes Cluster\u4e0a\u3067\u7a3c\u50cd\u3059\u308bHelm\u30b5\u30fc\u30d0 Release Chart\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5358\u4f4d RBAC # \u524d\u56de\u306e christina04.hatenablog.com \u3067RBAC\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3057\u305f\u304c\u3001helm\u306etiller\u304c api -server\u3092\u53e9\u304f\u306e\u3067\u6a29\u9650\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 Namespace\u306e\u7528\u610f # \u4eca\u56de\u306f\u5c02\u7528\u306eNamespace\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl create namespace helm ServiceAccount\u4f5c\u6210 # apiVersion : v1 kind : ServiceAccount metadata : name : tiller namespace : helm ClusterRoleBinding # apiVersion : rbac . authorization . k8s . io / v1 kind : ClusterRoleBinding metadata : name : tiller roleRef : apiGroup : rbac . authorization . k8s . io kind : ClusterRole name : cluster - admin subjects : - kind : ServiceAccount name : tiller namespace : helm Tiller\u306e\u8d77\u52d5 # \u5148\u307b\u3069\u306eServiceAccount\u3092\u4f7f\u3044\u3001 helm init \u3067Tiller Server\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 $ helm init --tiller-namespace helm --service-account tiller \u78ba\u8a8d\u3057\u307e\u3059\u3002 $ helm version --tiller-namespace helm Client: & version.Version { SemVer: \"v2.14.3\" , GitCommit: \"0e7f3b6637f7af8fcfddb3d2941fcc7cbebb0085\" , GitTreeState: \"clean\" } Server: & version.Version { SemVer: \"v2.14.3\" , GitCommit: \"0e7f3b6637f7af8fcfddb3d2941fcc7cbebb0085\" , GitTreeState: \"clean\" } helm\u3067prometheus\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb # Release\u540d\u3092 test-prometheus \u3068\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ helm install --tiller-namespace helm --name test-prometheus stable/prometheus \u554f\u984c\u306a\u304f\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 $ kubectl get po NAME READY STATUS RESTARTS AGE test-prometheus-alertmanager-6fb8c4d7f-6l77z 2 /2 Running 0 84s test-prometheus-kube-state-metrics-948cdb5f6-xvlll 1 /1 Running 0 84s test-prometheus-node-exporter-5xwx6 1 /1 Running 0 84s test-prometheus-pushgateway-6c4f8f8d6-rwjbf 1 /1 Running 0 84s test-prometheus-server-7c9c9f7b9f-22v8g 2 /2 Running 0 84s \u5404\u30b3\u30de\u30f3\u30c9 # \u7c21\u5358\u306e\u305f\u3081tiller-namespace\u3092 \u74b0\u5883\u5909\u6570 \u3067\u8a2d\u5b9a\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ export TILLER_NAMESPACE = helm \u4e00\u89a7 # $ helm list NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE test-prometheus 1 Tue Aug 6 20 :31:14 2019 DEPLOYED prometheus-8.11.4 2 .9.2 default \u3053\u306e REVISION \u306fupgrade\u3084rollback\u3059\u308b\u969b\u306b\u7e70\u308a\u4e0a\u304c\u3063\u3066\u3044\u304d\u307e\u3059\u3002 \u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d # $ helm status test-prometheus LAST DEPLOYED: Tue Aug 6 23 :26:25 2019 NAMESPACE: default STATUS: DEPLOYED RESOURCES: == > v1/ConfigMap NAME DATA AGE test-prometheus-alertmanager 1 17s test-prometheus-server 3 17s ... \u524a\u9664 # delete\u3067\u524a\u9664\u3057\u307e\u3059\u304c\u3001 $ helm delete test-prometheus release \"test-prometheus\" deleted \u5b9f\u306fRelease\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u304c DELETED \u306b\u306a\u308b\u3060\u3051\u3067\u6b8b\u3063\u3066\u3044\u307e\u3059\u3002 $ helm status test-prometheus LAST DEPLOYED: Tue Aug 6 20 :31:14 2019 NAMESPACE: default STATUS: DELETED pod\u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u306f\u524a\u9664\u3055\u308c\u3066\u307e\u3059\u3002 \u30ed\u30fc\u30eb\u30d0\u30c3\u30af # REVISION \u3092\u6307\u5b9a\u3057\u3066 \u30ed\u30fc\u30eb\u30d0\u30c3\u30af \u3057\u307e\u3059\u3002 $ helm rollback test-prometheus 1 Rollback was a success. \u30ed\u30fc\u30eb\u30d0\u30c3\u30af \u3057\u305f\u306e\u3067 REVISION \u304c\u4e0a\u304c\u3063\u3066\u307e\u3059\u3002 $ helm list NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE test-prometheus 2 Tue Aug 6 23 :26:25 2019 DEPLOYED prometheus-8.11.4 2 .9.2 default upgrade # fetch \u3067Chart\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066 $ helm fetch stable/prometheus \u5c55\u958b\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u3044\u3058\u3063\u3066\u304b\u3089 upgrade \u3057\u307e\u3059\u3002 $ helm upgrade test-prometheus prometheus/ Release \"test-prometheus\" has been upgraded. LAST DEPLOYED: Tue Aug 6 23 :42:23 2019 NAMESPACE: default STATUS: DEPLOYED \u5b8c\u5168\u524a\u9664 # \\--purge \u3092\u3064\u3051\u308b\u3068\u5b8c\u5168\u306b\u6d88\u3048\u307e\u3059\u3002 $ helm delete --purge test-prometheus \u901a\u5e38RBAC\u306e\u30a8\u30e9\u30fc\u306f\u3069\u3093\u306a\u306e\uff1f # RBAC\u304c\u6709\u52b9\u306a\u74b0\u5883\u306e\u5834\u5408\u3001\u6b63\u3057\u3044ServiceAccount\u3092\u7528\u610f\u3057\u306a\u3044\u3068\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002 $ helm install --name test-prometheus stable/prometheus Error: release test-prometheus failed: namespaces \"default\" is forbidden: User \"system:serviceaccount:kube-system:default\" cannot get resource \"namespaces\" in API group \"\" in the namespace \"default\" --tiller-namespace\u304c\u9762\u5012\u304f\u3055\u3044 # helm\u306eTiller Server\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306enamespace\u306f Helm will look for Tiller in the kube-system namespace unless \\--tiller-namespace or TILLER_NAMESPACE is set. ref: Helm | \u3068\u3042\u308b\u3088\u3046\u306b\u3001 kube-system \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u306a\u306e\u3067 kube-system:default \u306eServiceAccount\u306bClusterRoleBinding\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002 apiVersion : rbac . authorization . k8s . io / v1 kind : ClusterRoleBinding metadata : name : tiller roleRef : apiGroup : rbac . authorization . k8s . io kind : ClusterRole name : cluster - admin subjects : - kind : ServiceAccount name : default namespace : kube - system \u3082\u3061\u308d\u3093\u5148\u7a0b\u306e\u3088\u3046\u306b \u74b0\u5883\u5909\u6570 TILLER_NAMESPACE \u3067\u8a2d\u5b9a\u3059\u308b\u306e\u3082\uff11\u3064\u3067\u3059\u3002 minikube\u306e\u5834\u5408RBAC\u306eServiceAccount\u4e0d\u8981 # minikube\u306e\u5834\u5408\u3001helm\u304c\u6271\u3044\u3084\u3059\u3044\u3088\u3046 minikube-rbac \u3068\u3044\u3046ClusterRoleBinding\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 $ kubectl get clusterrolebinding minikube-rbac -o yaml apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: creationTimestamp: \"2019-08-06T10:57:51Z\" name: minikube-rbac resourceVersion: \"237\" selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/minikube-rbac uid: a7210a35-4d6a-4c18-bd6d-15e72f5fbb8a roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: default namespace: kube-system \u3053\u308c\u306f kube-sysmte:default \u306b cluster-admin \u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u308b\u306e\u3067\u7279\u306b\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082helm\u304c\u81ea\u7531\u306b\u4f7f\u3048\u307e\u3059\u3002 Docker for Mac \u306e\u5834\u5408\u3082RBAC\u8a2d\u5b9a\u4e0d\u8981 # Kubernetes \u306eRBAC\u3092\u7406\u89e3\u3059\u308b - Carpe Diem \u3067\u66f8\u3044\u305f\u3088\u3046\u306b default : default \u542b\u3080\u5168\u3066\u306eServiceAccount\u306bcluster-admin\u6a29\u9650\u304c\u3042\u308b\u306e\u3067\u4e0d\u8981\u3067\u3059\u3002 \u4eca\u56de\u4f7f\u7528\u3057\u305f\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089 github.com","title":"Helm"},{"location":"concepts/kubernetes/helm/#helm","text":"Kubernetes \u306e\u554f\u984c\u306e\uff11\u3064\u306b\u3001 \u30de\u30cb\u30d5\u30a7\u30b9\u30c8 \u30d5\u30a1\u30a4\u30eb\u304c\u305f\u304f\u3055\u3093\u3067\u304d\u308b YAML\u306e\u58c1 \u3068\u547c\u3070\u308c\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 image mount\u3059\u308b\u30d5\u30a1\u30a4\u30eb label \u30ea\u30bd\u30fc\u30b9\u5272\u5f53 \u3068\u3044\u3063\u305f\u4e00\u90e8\u306e\u8981\u7d20\u3060\u3051\u5909\u3048\u305f\u3044\u6642\u3001\u307b\u3068\u3093\u3069\u69cb\u6210\u306f\u540c\u3058\u3067\u4f3c\u305f\u3088\u3046\u306a \u30de\u30cb\u30d5\u30a7\u30b9\u30c8 \u30d5\u30a1\u30a4\u30eb\u304c\u5927\u91cf\u306b\u51fa\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u305d\u3057\u3066\u305d\u3046\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u5f80\u3005\u306b\u3057\u3066\u7ba1\u7406\u3055\u308c\u305a\u8ca0\u50b5\u3068\u306a\u3063\u3066\u3044\u304d\u307e\u3059\u3002 \u305d\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306e\u304cHelm\u3068\u3044\u3046 Kubernetes \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3067\u3059\u3002 \u5171\u901a\u90e8\u5206\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5316\u3057\u3001\u53ef\u5909\u90e8\u5206\u3092\u5909\u6570\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u4eca\u56de\u306f\u305d\u306eHelm\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 Helm\u3092\u30b7\u30b9\u30c6\u30e0 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u306f\u4ee5\u4e0b\u3067\u3059\u3002 ref: Simplifying App Deployment in Kubernetes with Helm Charts \u56f3\u304b\u3089\u308f\u304b\u308b\u3088\u3046\u306bTiller\u3068\u547c\u3070\u308c\u308b\u30b5\u30fc\u30d0\u304c Kubernetes Cluster\u5185\u3067\u8d77\u52d5\u3057\u3001 api -server\u3092\u30b3\u30fc\u30eb\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3044\u307e\u3059\u3002 \u899a\u3048\u3066\u304a\u3044\u305f\u65b9\u304c\u3088\u3044\u5358\u8a9e\u306f\u4ee5\u4e0b\u3067\u3059\u3002 \u7528\u8a9e \u8aac\u660e Chart Helm\u3067\u5229\u7528\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 Tiller Kubernetes Cluster\u4e0a\u3067\u7a3c\u50cd\u3059\u308bHelm\u30b5\u30fc\u30d0 Release Chart\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5358\u4f4d","title":"Helm \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9"},{"location":"concepts/kubernetes/helm/#rbac","text":"\u524d\u56de\u306e christina04.hatenablog.com \u3067RBAC\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3057\u305f\u304c\u3001helm\u306etiller\u304c api -server\u3092\u53e9\u304f\u306e\u3067\u6a29\u9650\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002","title":"RBAC"},{"location":"concepts/kubernetes/helm/#namespace","text":"\u4eca\u56de\u306f\u5c02\u7528\u306eNamespace\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ kubectl create namespace helm","title":"Namespace\u306e\u7528\u610f"},{"location":"concepts/kubernetes/helm/#serviceaccount","text":"apiVersion : v1 kind : ServiceAccount metadata : name : tiller namespace : helm","title":"ServiceAccount\u4f5c\u6210"},{"location":"concepts/kubernetes/helm/#clusterrolebinding","text":"apiVersion : rbac . authorization . k8s . io / v1 kind : ClusterRoleBinding metadata : name : tiller roleRef : apiGroup : rbac . authorization . k8s . io kind : ClusterRole name : cluster - admin subjects : - kind : ServiceAccount name : tiller namespace : helm","title":"ClusterRoleBinding"},{"location":"concepts/kubernetes/helm/#tiller","text":"\u5148\u307b\u3069\u306eServiceAccount\u3092\u4f7f\u3044\u3001 helm init \u3067Tiller Server\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 $ helm init --tiller-namespace helm --service-account tiller \u78ba\u8a8d\u3057\u307e\u3059\u3002 $ helm version --tiller-namespace helm Client: & version.Version { SemVer: \"v2.14.3\" , GitCommit: \"0e7f3b6637f7af8fcfddb3d2941fcc7cbebb0085\" , GitTreeState: \"clean\" } Server: & version.Version { SemVer: \"v2.14.3\" , GitCommit: \"0e7f3b6637f7af8fcfddb3d2941fcc7cbebb0085\" , GitTreeState: \"clean\" }","title":"Tiller\u306e\u8d77\u52d5"},{"location":"concepts/kubernetes/helm/#helmprometheus","text":"Release\u540d\u3092 test-prometheus \u3068\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ helm install --tiller-namespace helm --name test-prometheus stable/prometheus \u554f\u984c\u306a\u304f\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 $ kubectl get po NAME READY STATUS RESTARTS AGE test-prometheus-alertmanager-6fb8c4d7f-6l77z 2 /2 Running 0 84s test-prometheus-kube-state-metrics-948cdb5f6-xvlll 1 /1 Running 0 84s test-prometheus-node-exporter-5xwx6 1 /1 Running 0 84s test-prometheus-pushgateway-6c4f8f8d6-rwjbf 1 /1 Running 0 84s test-prometheus-server-7c9c9f7b9f-22v8g 2 /2 Running 0 84s","title":"helm\u3067prometheus\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"concepts/kubernetes/helm/#_1","text":"\u7c21\u5358\u306e\u305f\u3081tiller-namespace\u3092 \u74b0\u5883\u5909\u6570 \u3067\u8a2d\u5b9a\u3057\u3066\u304a\u304d\u307e\u3059\u3002 $ export TILLER_NAMESPACE = helm","title":"\u5404\u30b3\u30de\u30f3\u30c9"},{"location":"concepts/kubernetes/helm/#_2","text":"$ helm list NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE test-prometheus 1 Tue Aug 6 20 :31:14 2019 DEPLOYED prometheus-8.11.4 2 .9.2 default \u3053\u306e REVISION \u306fupgrade\u3084rollback\u3059\u308b\u969b\u306b\u7e70\u308a\u4e0a\u304c\u3063\u3066\u3044\u304d\u307e\u3059\u3002","title":"\u4e00\u89a7"},{"location":"concepts/kubernetes/helm/#_3","text":"$ helm status test-prometheus LAST DEPLOYED: Tue Aug 6 23 :26:25 2019 NAMESPACE: default STATUS: DEPLOYED RESOURCES: == > v1/ConfigMap NAME DATA AGE test-prometheus-alertmanager 1 17s test-prometheus-server 3 17s ...","title":"\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d"},{"location":"concepts/kubernetes/helm/#_4","text":"delete\u3067\u524a\u9664\u3057\u307e\u3059\u304c\u3001 $ helm delete test-prometheus release \"test-prometheus\" deleted \u5b9f\u306fRelease\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u304c DELETED \u306b\u306a\u308b\u3060\u3051\u3067\u6b8b\u3063\u3066\u3044\u307e\u3059\u3002 $ helm status test-prometheus LAST DEPLOYED: Tue Aug 6 20 :31:14 2019 NAMESPACE: default STATUS: DELETED pod\u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u306f\u524a\u9664\u3055\u308c\u3066\u307e\u3059\u3002","title":"\u524a\u9664"},{"location":"concepts/kubernetes/helm/#_5","text":"REVISION \u3092\u6307\u5b9a\u3057\u3066 \u30ed\u30fc\u30eb\u30d0\u30c3\u30af \u3057\u307e\u3059\u3002 $ helm rollback test-prometheus 1 Rollback was a success. \u30ed\u30fc\u30eb\u30d0\u30c3\u30af \u3057\u305f\u306e\u3067 REVISION \u304c\u4e0a\u304c\u3063\u3066\u307e\u3059\u3002 $ helm list NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE test-prometheus 2 Tue Aug 6 23 :26:25 2019 DEPLOYED prometheus-8.11.4 2 .9.2 default","title":"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af"},{"location":"concepts/kubernetes/helm/#upgrade","text":"fetch \u3067Chart\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066 $ helm fetch stable/prometheus \u5c55\u958b\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u3044\u3058\u3063\u3066\u304b\u3089 upgrade \u3057\u307e\u3059\u3002 $ helm upgrade test-prometheus prometheus/ Release \"test-prometheus\" has been upgraded. LAST DEPLOYED: Tue Aug 6 23 :42:23 2019 NAMESPACE: default STATUS: DEPLOYED","title":"upgrade"},{"location":"concepts/kubernetes/helm/#_6","text":"\\--purge \u3092\u3064\u3051\u308b\u3068\u5b8c\u5168\u306b\u6d88\u3048\u307e\u3059\u3002 $ helm delete --purge test-prometheus","title":"\u5b8c\u5168\u524a\u9664"},{"location":"concepts/kubernetes/helm/#rbac_1","text":"RBAC\u304c\u6709\u52b9\u306a\u74b0\u5883\u306e\u5834\u5408\u3001\u6b63\u3057\u3044ServiceAccount\u3092\u7528\u610f\u3057\u306a\u3044\u3068\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002 $ helm install --name test-prometheus stable/prometheus Error: release test-prometheus failed: namespaces \"default\" is forbidden: User \"system:serviceaccount:kube-system:default\" cannot get resource \"namespaces\" in API group \"\" in the namespace \"default\"","title":"\u901a\u5e38RBAC\u306e\u30a8\u30e9\u30fc\u306f\u3069\u3093\u306a\u306e\uff1f"},{"location":"concepts/kubernetes/helm/#45-tiller-namespace","text":"helm\u306eTiller Server\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306enamespace\u306f Helm will look for Tiller in the kube-system namespace unless \\--tiller-namespace or TILLER_NAMESPACE is set. ref: Helm | \u3068\u3042\u308b\u3088\u3046\u306b\u3001 kube-system \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u306a\u306e\u3067 kube-system:default \u306eServiceAccount\u306bClusterRoleBinding\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002 apiVersion : rbac . authorization . k8s . io / v1 kind : ClusterRoleBinding metadata : name : tiller roleRef : apiGroup : rbac . authorization . k8s . io kind : ClusterRole name : cluster - admin subjects : - kind : ServiceAccount name : default namespace : kube - system \u3082\u3061\u308d\u3093\u5148\u7a0b\u306e\u3088\u3046\u306b \u74b0\u5883\u5909\u6570 TILLER_NAMESPACE \u3067\u8a2d\u5b9a\u3059\u308b\u306e\u3082\uff11\u3064\u3067\u3059\u3002","title":"--tiller-namespace\u304c\u9762\u5012\u304f\u3055\u3044"},{"location":"concepts/kubernetes/helm/#minikuberbacserviceaccount","text":"minikube\u306e\u5834\u5408\u3001helm\u304c\u6271\u3044\u3084\u3059\u3044\u3088\u3046 minikube-rbac \u3068\u3044\u3046ClusterRoleBinding\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 $ kubectl get clusterrolebinding minikube-rbac -o yaml apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: creationTimestamp: \"2019-08-06T10:57:51Z\" name: minikube-rbac resourceVersion: \"237\" selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/minikube-rbac uid: a7210a35-4d6a-4c18-bd6d-15e72f5fbb8a roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: default namespace: kube-system \u3053\u308c\u306f kube-sysmte:default \u306b cluster-admin \u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u308b\u306e\u3067\u7279\u306b\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082helm\u304c\u81ea\u7531\u306b\u4f7f\u3048\u307e\u3059\u3002","title":"minikube\u306e\u5834\u5408RBAC\u306eServiceAccount\u4e0d\u8981"},{"location":"concepts/kubernetes/helm/#docker-for-macrbac","text":"Kubernetes \u306eRBAC\u3092\u7406\u89e3\u3059\u308b - Carpe Diem \u3067\u66f8\u3044\u305f\u3088\u3046\u306b default : default \u542b\u3080\u5168\u3066\u306eServiceAccount\u306bcluster-admin\u6a29\u9650\u304c\u3042\u308b\u306e\u3067\u4e0d\u8981\u3067\u3059\u3002 \u4eca\u56de\u4f7f\u7528\u3057\u305f\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089 github.com","title":"Docker for Mac\u306e\u5834\u5408\u3082RBAC\u8a2d\u5b9a\u4e0d\u8981"},{"location":"guides/when-to-use-google-kubernetes-engine-vs-cloud-run-for-containers/","text":"Source GKE \u3068 Cloud Run\u3001\u3069\u3046\u4f7f\u3044\u5206\u3051\u308b\u3079\u304d\u304b | Google Cloud Blog # \u203b\u3053\u306e\u6295\u7a3f\u306f\u7c73\u56fd\u6642\u9593 2019 \u5e74 11 \u6708 23 \u65e5\u306b\u3001Google Cloud blog \u306b \u6295\u7a3f \u3055\u308c\u305f\u3082\u306e\u306e\u6284\u8a33\u3067\u3059\u3002 \u9ad8\u5ea6\u306a\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3068\u69cb\u6210\u306e\u67d4\u8edf\u6027\u3092\u63d0\u4f9b\u3059\u308b\u30b3\u30f3\u30c6\u30ca \u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u6c42\u3081\u3066\u3044\u308b\u304a\u5ba2\u69d8\u306b\u3068\u3063\u3066\u3001\u30de\u30cd\u30fc\u30b8\u30c9 Kubernetes \u30b5\u30fc\u30d3\u30b9\u3067\u3042\u308b Google Kubernetes Engine \uff08GKE\uff09\u306f\u512a\u308c\u305f\u9078\u629e\u80a2\u306b\u306a\u308a\u307e\u3059\u3002GKE \u306f\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u306b\u52a0\u3048\u3066\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u3001\u30aa\u30d6\u30b6\u30fc\u30d0\u30d3\u30ea\u30c6\u30a3\uff08\u53ef\u89b3\u6e2c\u6027\uff09\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306a\u3069\u3001\u30b3\u30f3\u30c6\u30ca \u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u3042\u3089\u3086\u308b\u5074\u9762\u3092\u5b8c\u5168\u306b\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002 \u3057\u304b\u3057\u306a\u304c\u3089\u3001\u304a\u4f7f\u3044\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u305d\u3046\u3057\u305f\u30ec\u30d9\u30eb\u306e\u30af\u30e9\u30b9\u30bf\u69cb\u6210\u3084\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30d5\u30eb\u30de\u30cd\u30fc\u30b8\u30c9\u306e Cloud Run \u304c\u6700\u9069\u306a\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u30d5\u30eb\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u306f\u3001Kubernetes \u306e\u540d\u524d\u7a7a\u9593\u3001\u30dd\u30c3\u30c9\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u5171\u5b58\uff08\u30b5\u30a4\u30c9\u30ab\u30fc\uff09\u3001\u30ce\u30fc\u30c9\u306e\u5272\u308a\u5f53\u3066\u3084\u7ba1\u7406\u3068\u3044\u3063\u305f\u6a5f\u80fd\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9 \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u3046\u3063\u3066\u3064\u3051\u306e \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 \u3067\u3059\u3002 \u306a\u305c Cloud Run \u306a\u306e\u304b # \u30de\u30cd\u30fc\u30b8\u30c9 \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9 \u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3042\u308b Cloud Run \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u6a5f\u80fd\u3084\u30e1\u30ea\u30c3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 **\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u5bb9\u6613\u306a\u30c7\u30d7\u30ed\u30a4 : **\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u30b7\u30f3\u30b0\u30eb \u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u3001\u30b5\u30fc\u30d3\u30b9\u56fa\u6709\u306e\u69cb\u6210\u306f\u4e0d\u8981\u3067\u3059\u3002 **\u30b7\u30f3\u30d7\u30eb\u3067\u7d71\u4e00\u7684\u306a\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc \u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9 : **\u5404\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u3001Cloud Run \u306e\u30c7\u30d7\u30ed\u30a4\u5358\u4f4d\u3067\u3042\u308b Docker \u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u307e\u3059\u3002 **\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5b9f\u884c : **\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u306b\u5fdc\u3058\u3066\u81ea\u52d5\u7684\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u307e\u3059\u3002\u672c\u683c\u7684\u306a Kubernetes \u30af\u30e9\u30b9\u30bf\u306e\u69cb\u6210\u3084\u7ba1\u7406\u306f\u4e0d\u8981\u3067\u3059\u3002\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u306a\u3044\u5834\u5408\u306f\u30bc\u30ed\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u30ea\u30bd\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002 **\u4efb\u610f\u306e\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\u306e\u30b5\u30dd\u30fc\u30c8 : **Cloud Run \u306f\u30b3\u30f3\u30c6\u30ca\u3092\u30d9\u30fc\u30b9\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u4efb\u610f\u306e\u8a00\u8a9e\u3067\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3067\u304d\u3001\u4efb\u610f\u306e\u30d0\u30a4\u30ca\u30ea\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 Cloud Run \u306f 2 \u3064\u306e\u69cb\u6210 \u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u30d5\u30eb\u30de\u30cd\u30fc\u30b8\u30c9\u306e Google Cloud \u30b5\u30fc\u30d3\u30b9\u3068\u3057\u3066\u3001\u305d\u3057\u3066 Cloud Run for Anthos \u3068\u3057\u3066\u3067\u3059\uff08\u5f8c\u8005\u3067\u306f Cloud Run \u3092 Anthos GKE \u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\uff09\u3002\u3059\u3067\u306b Anthos \u3092\u304a\u4f7f\u3044\u306e\u5834\u5408\u306f\u3001Cloud Run for Anthos \u3067 \u30b3\u30f3\u30c6\u30ca\u3092\u304a\u5ba2\u69d8\u306e\u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30d7\u30ed\u30a4 \u3057\u3001\u30ab\u30b9\u30bf\u30e0 \u30de\u30b7\u30f3\u30bf\u30a4\u30d7\u3084\u9ad8\u5ea6\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0 \u30b5\u30dd\u30fc\u30c8\u3001GPU \u3092\u5229\u7528\u3057\u3066\u3001Cloud Run \u30b5\u30fc\u30d3\u30b9\u3092\u5f37\u5316\u3067\u304d\u307e\u3059\u3002\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u30b5\u30fc\u30d3\u30b9\u3068 GKE \u30af\u30e9\u30b9\u30bf\u306f\u3001\u3044\u305a\u308c\u3082\u30b3\u30f3\u30bd\u30fc\u30eb\u3068\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u4e21\u65b9\u304b\u3089\u5b8c\u5168\u306b\u4f5c\u6210\u3001\u7ba1\u7406\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u3057\u304b\u3082\u3001\u4fbf\u5229\u306a\u3053\u3068\u306b\u3001\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u3068 Cloud Run for Anthos \u306f\u3001\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u88c5\u3057\u76f4\u3059\u3053\u3068\u306a\u304f\u3001\u5f8c\u3067\u65b9\u91dd\u3092\u5909\u3048\u3066\u76f8\u4e92\u306b\u7c21\u5358\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Cloud Run \u306e\u30e6\u30fc\u30b9 \u30b1\u30fc\u30b9 # \u4ee5\u4e0a\u306e\u70b9\u3092\u5177\u4f53\u7684\u306b\u7406\u89e3\u3057\u3066\u3044\u305f\u3060\u304f\u305f\u3081\u306b\u3001\u30e6\u30fc\u30b9 \u30b1\u30fc\u30b9\u306e\u4f8b\u3068\u3057\u3066\u3001\u30a2\u30c9\u30ec\u30b9\u306e\u8ffd\u52a0\u3001\u66f4\u65b0\u3001\u524a\u9664\u3001\u4e00\u89a7\u8868\u793a\u3092\u884c\u3046\u30b5\u30fc\u30d3\u30b9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u3053\u306e\u30a2\u30c9\u30ec\u30b9\u7ba1\u7406\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u306b\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u64cd\u4f5c\u3054\u3068\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092 1 \u3064\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3066\u30b3\u30f3\u30c6\u30ca \u30ec\u30b8\u30b9\u30c8\u30ea\u306b\u767b\u9332\u3057\u305f\u3089\u3001\u30b7\u30f3\u30b0\u30eb \u30b3\u30de\u30f3\u30c9\u3067\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u30024 \u3064\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\uff08\u5404\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092 1 \u3064\u305a\u3064\u30c7\u30d7\u30ed\u30a4\uff09\u3001\u5b8c\u5168\u306b\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u30b5\u30fc\u30d3\u30b9\u304c\u7a3c\u50cd\u3057\u307e\u3059\u3002\u4e0b\u306e\u56f3\u306f\u3001\u57fa\u76e4\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u3057\u3066 Cloud Spanner \u3092\u4f7f\u3063\u305f\u30c7\u30d7\u30ed\u30a4\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002","title":"GKE \u3068 Cloud Run\u3001\u3069\u3046\u4f7f\u3044\u5206\u3051\u308b\u3079\u304d\u304b"},{"location":"guides/when-to-use-google-kubernetes-engine-vs-cloud-run-for-containers/#gke-cloud-run-google-cloud-blog","text":"\u203b\u3053\u306e\u6295\u7a3f\u306f\u7c73\u56fd\u6642\u9593 2019 \u5e74 11 \u6708 23 \u65e5\u306b\u3001Google Cloud blog \u306b \u6295\u7a3f \u3055\u308c\u305f\u3082\u306e\u306e\u6284\u8a33\u3067\u3059\u3002 \u9ad8\u5ea6\u306a\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3068\u69cb\u6210\u306e\u67d4\u8edf\u6027\u3092\u63d0\u4f9b\u3059\u308b\u30b3\u30f3\u30c6\u30ca \u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u6c42\u3081\u3066\u3044\u308b\u304a\u5ba2\u69d8\u306b\u3068\u3063\u3066\u3001\u30de\u30cd\u30fc\u30b8\u30c9 Kubernetes \u30b5\u30fc\u30d3\u30b9\u3067\u3042\u308b Google Kubernetes Engine \uff08GKE\uff09\u306f\u512a\u308c\u305f\u9078\u629e\u80a2\u306b\u306a\u308a\u307e\u3059\u3002GKE \u306f\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u306b\u52a0\u3048\u3066\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u3001\u30aa\u30d6\u30b6\u30fc\u30d0\u30d3\u30ea\u30c6\u30a3\uff08\u53ef\u89b3\u6e2c\u6027\uff09\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306a\u3069\u3001\u30b3\u30f3\u30c6\u30ca \u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u3042\u3089\u3086\u308b\u5074\u9762\u3092\u5b8c\u5168\u306b\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002 \u3057\u304b\u3057\u306a\u304c\u3089\u3001\u304a\u4f7f\u3044\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u305d\u3046\u3057\u305f\u30ec\u30d9\u30eb\u306e\u30af\u30e9\u30b9\u30bf\u69cb\u6210\u3084\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30d5\u30eb\u30de\u30cd\u30fc\u30b8\u30c9\u306e Cloud Run \u304c\u6700\u9069\u306a\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u30d5\u30eb\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u306f\u3001Kubernetes \u306e\u540d\u524d\u7a7a\u9593\u3001\u30dd\u30c3\u30c9\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u5171\u5b58\uff08\u30b5\u30a4\u30c9\u30ab\u30fc\uff09\u3001\u30ce\u30fc\u30c9\u306e\u5272\u308a\u5f53\u3066\u3084\u7ba1\u7406\u3068\u3044\u3063\u305f\u6a5f\u80fd\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9 \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u3046\u3063\u3066\u3064\u3051\u306e \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 \u3067\u3059\u3002","title":"GKE \u3068 Cloud Run\u3001\u3069\u3046\u4f7f\u3044\u5206\u3051\u308b\u3079\u304d\u304b | Google Cloud Blog"},{"location":"guides/when-to-use-google-kubernetes-engine-vs-cloud-run-for-containers/#cloud-run","text":"\u30de\u30cd\u30fc\u30b8\u30c9 \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9 \u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3042\u308b Cloud Run \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u6a5f\u80fd\u3084\u30e1\u30ea\u30c3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 **\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u5bb9\u6613\u306a\u30c7\u30d7\u30ed\u30a4 : **\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u30b7\u30f3\u30b0\u30eb \u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u3001\u30b5\u30fc\u30d3\u30b9\u56fa\u6709\u306e\u69cb\u6210\u306f\u4e0d\u8981\u3067\u3059\u3002 **\u30b7\u30f3\u30d7\u30eb\u3067\u7d71\u4e00\u7684\u306a\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc \u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9 : **\u5404\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u3001Cloud Run \u306e\u30c7\u30d7\u30ed\u30a4\u5358\u4f4d\u3067\u3042\u308b Docker \u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u307e\u3059\u3002 **\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5b9f\u884c : **\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u306b\u5fdc\u3058\u3066\u81ea\u52d5\u7684\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u307e\u3059\u3002\u672c\u683c\u7684\u306a Kubernetes \u30af\u30e9\u30b9\u30bf\u306e\u69cb\u6210\u3084\u7ba1\u7406\u306f\u4e0d\u8981\u3067\u3059\u3002\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u306a\u3044\u5834\u5408\u306f\u30bc\u30ed\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u30ea\u30bd\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002 **\u4efb\u610f\u306e\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\u306e\u30b5\u30dd\u30fc\u30c8 : **Cloud Run \u306f\u30b3\u30f3\u30c6\u30ca\u3092\u30d9\u30fc\u30b9\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u4efb\u610f\u306e\u8a00\u8a9e\u3067\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3067\u304d\u3001\u4efb\u610f\u306e\u30d0\u30a4\u30ca\u30ea\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 Cloud Run \u306f 2 \u3064\u306e\u69cb\u6210 \u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u30d5\u30eb\u30de\u30cd\u30fc\u30b8\u30c9\u306e Google Cloud \u30b5\u30fc\u30d3\u30b9\u3068\u3057\u3066\u3001\u305d\u3057\u3066 Cloud Run for Anthos \u3068\u3057\u3066\u3067\u3059\uff08\u5f8c\u8005\u3067\u306f Cloud Run \u3092 Anthos GKE \u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\uff09\u3002\u3059\u3067\u306b Anthos \u3092\u304a\u4f7f\u3044\u306e\u5834\u5408\u306f\u3001Cloud Run for Anthos \u3067 \u30b3\u30f3\u30c6\u30ca\u3092\u304a\u5ba2\u69d8\u306e\u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30d7\u30ed\u30a4 \u3057\u3001\u30ab\u30b9\u30bf\u30e0 \u30de\u30b7\u30f3\u30bf\u30a4\u30d7\u3084\u9ad8\u5ea6\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0 \u30b5\u30dd\u30fc\u30c8\u3001GPU \u3092\u5229\u7528\u3057\u3066\u3001Cloud Run \u30b5\u30fc\u30d3\u30b9\u3092\u5f37\u5316\u3067\u304d\u307e\u3059\u3002\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u30b5\u30fc\u30d3\u30b9\u3068 GKE \u30af\u30e9\u30b9\u30bf\u306f\u3001\u3044\u305a\u308c\u3082\u30b3\u30f3\u30bd\u30fc\u30eb\u3068\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u4e21\u65b9\u304b\u3089\u5b8c\u5168\u306b\u4f5c\u6210\u3001\u7ba1\u7406\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u3057\u304b\u3082\u3001\u4fbf\u5229\u306a\u3053\u3068\u306b\u3001\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u3068 Cloud Run for Anthos \u306f\u3001\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u88c5\u3057\u76f4\u3059\u3053\u3068\u306a\u304f\u3001\u5f8c\u3067\u65b9\u91dd\u3092\u5909\u3048\u3066\u76f8\u4e92\u306b\u7c21\u5358\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u306a\u305c Cloud Run \u306a\u306e\u304b"},{"location":"guides/when-to-use-google-kubernetes-engine-vs-cloud-run-for-containers/#cloud-run_1","text":"\u4ee5\u4e0a\u306e\u70b9\u3092\u5177\u4f53\u7684\u306b\u7406\u89e3\u3057\u3066\u3044\u305f\u3060\u304f\u305f\u3081\u306b\u3001\u30e6\u30fc\u30b9 \u30b1\u30fc\u30b9\u306e\u4f8b\u3068\u3057\u3066\u3001\u30a2\u30c9\u30ec\u30b9\u306e\u8ffd\u52a0\u3001\u66f4\u65b0\u3001\u524a\u9664\u3001\u4e00\u89a7\u8868\u793a\u3092\u884c\u3046\u30b5\u30fc\u30d3\u30b9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u3053\u306e\u30a2\u30c9\u30ec\u30b9\u7ba1\u7406\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u306b\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u64cd\u4f5c\u3054\u3068\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092 1 \u3064\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3066\u30b3\u30f3\u30c6\u30ca \u30ec\u30b8\u30b9\u30c8\u30ea\u306b\u767b\u9332\u3057\u305f\u3089\u3001\u30b7\u30f3\u30b0\u30eb \u30b3\u30de\u30f3\u30c9\u3067\u30de\u30cd\u30fc\u30b8\u30c9 Cloud Run \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u30024 \u3064\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\uff08\u5404\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092 1 \u3064\u305a\u3064\u30c7\u30d7\u30ed\u30a4\uff09\u3001\u5b8c\u5168\u306b\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u30b5\u30fc\u30d3\u30b9\u304c\u7a3c\u50cd\u3057\u307e\u3059\u3002\u4e0b\u306e\u56f3\u306f\u3001\u57fa\u76e4\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u3057\u3066 Cloud Spanner \u3092\u4f7f\u3063\u305f\u30c7\u30d7\u30ed\u30a4\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002","title":"Cloud Run \u306e\u30e6\u30fc\u30b9 \u30b1\u30fc\u30b9"},{"location":"guides/kubernetes/replicaset-vs-deployment/","text":"ReplicaSet\u3068Deployment\u306e\u9055\u3044 # \u53c2\u8003 # Kubernetes \u306e Pod / ReplicaSet / Deployment \u306b\u3064\u3044\u3066\u3001\u3088\u3046\u3084\u304f\u6574\u7406\u3067\u304d\u305f \uff08\u5165\u9580k8s \u8aad\u66f8\u30e1\u30e2\uff09 - \u3048\u3044\u306e\u3046\u306b\u3063\u304d \u3010k8s\u3011Pod < ReplicaSet < Deployment - Qiita Kubernetes: Deployment \u306e\u4ed5\u7d44\u307f - Qiita Kubernetes\u9053\u5834 8\u65e5\u76ee - ReplicaSet / Deployment\u306b\u3064\u3044\u3066 - Toku's Blog \u3010\u9023\u8f09\u3011Kubernetes\u5165\u9580 [4] Kubernetes\u306e4\u3064\u306e\u30ea\u30bd\u30fc\u30b9 - Pod/ReplicaSet/Deployment/Service\uff5c\u958b\u767a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\uff5cIT\u88fd\u54c1\u306e\u4e8b\u4f8b\u30fb\u89e3\u8aac\u8a18\u4e8b Kubernetes\u57fa\u672c\u7528\u8a9e\u89e3\u8aac Pod, ReplicaSet, Service, Deployment - \u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30fc\u30f3\u30a8\u30f3\u30b8\u30cb\u30a2\u3068\u3057\u3066\u751f\u304d\u308b","title":"ReplicaSet\u3068Deployment\u306e\u9055\u3044"},{"location":"guides/kubernetes/replicaset-vs-deployment/#replicasetdeployment","text":"","title":"ReplicaSet\u3068Deployment\u306e\u9055\u3044"},{"location":"guides/kubernetes/replicaset-vs-deployment/#_1","text":"Kubernetes \u306e Pod / ReplicaSet / Deployment \u306b\u3064\u3044\u3066\u3001\u3088\u3046\u3084\u304f\u6574\u7406\u3067\u304d\u305f \uff08\u5165\u9580k8s \u8aad\u66f8\u30e1\u30e2\uff09 - \u3048\u3044\u306e\u3046\u306b\u3063\u304d \u3010k8s\u3011Pod < ReplicaSet < Deployment - Qiita Kubernetes: Deployment \u306e\u4ed5\u7d44\u307f - Qiita Kubernetes\u9053\u5834 8\u65e5\u76ee - ReplicaSet / Deployment\u306b\u3064\u3044\u3066 - Toku's Blog \u3010\u9023\u8f09\u3011Kubernetes\u5165\u9580 [4] Kubernetes\u306e4\u3064\u306e\u30ea\u30bd\u30fc\u30b9 - Pod/ReplicaSet/Deployment/Service\uff5c\u958b\u767a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\uff5cIT\u88fd\u54c1\u306e\u4e8b\u4f8b\u30fb\u89e3\u8aac\u8a18\u4e8b Kubernetes\u57fa\u672c\u7528\u8a9e\u89e3\u8aac Pod, ReplicaSet, Service, Deployment - \u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30fc\u30f3\u30a8\u30f3\u30b8\u30cb\u30a2\u3068\u3057\u3066\u751f\u304d\u308b","title":"\u53c2\u8003"},{"location":"overview/","text":"","title":"Home"},{"location":"references/kubernetes/","text":"Kubernetes # Cluster components # The terms that are typically used to describe cluster components could be confusing, so in an effort to clarify things, here's a schema of the most important ones, and their definition. CPU # A Central Processing Unit (CPU), or core, or CPU core, is the smallest unit in a microprocessor that can carry out computational tasks, that is, run programs. Modern processors typically have multiple cores. Socket # A socket is the connector that houses the microprocessor. By extension, it represents the physical package of a processor, that typically contains multiple cores. Node # A node is a physical, stand-alone computer, that can handle computing tasks and run jobs. It's connected to other compute nodes via a fast network interconnect, and contains CPUs, memory and devices managed by an operating system. Cluster # A cluster is the complete collection of nodes with networking and file storage facilities. It's usually a group of independent computers connected via a fast network interconnect, managed by a resource manager, which acts as a large parallel computer. Other commonly used terms # To make this documentation more accessible, we try to explain key terms in a non-technical way. When reading these pages, please keep in mind the following definitions, presented in alphabetical order: Application # An application is a computer program designed to perform a group of coordinated functions, tasks, or activities for the benefit of the user. In the context of scientific computing, an application typically performs computations related to a scientific goal (molecular dynamics simulations, genome assembly, compuational fluid dynamics simulations, etc). Backfill # Backfill scheduling is a method that a scheduler can use in order to maximize utilization. It allows smaller (both in terms of size and time requirements), lower priority jobs to start before larger, higher priority ones, as long as doing so doesn't push back the higher-priority jobs expected start time. Executable # A binary (or executable) program refers to the machine-code compiled version of an application. This is which is a binary file that a computer can execute directly. As opposed to the application source code, which is the human-readable version of the application internal instructions, and which needs to be compiled by a compiler to produce the executable binary. Fairshare # A resource scheduler ranks jobs by priority for execution. Each job's priority in queue is determined by multiple factors, among which one being the user's fairshare score. A user's fairshare score is computed based on a target (the given portion of the resources that this user should be able to use) and the user's effetive usage, ie the amount of resources (s)he effectively used in the past. As a result, the more resources past jobs have used, the lower the priority of the next jobs will be. Past usage is computed based on a sliding window and progressively forgotten over time. This enables all users on a shared resource to get a fair portion of it for their own use, by giving higher priorty to users who have been underserved in the past. FLOPS # Floating-point Operations Per Second (FLOPS) are a measure of computing performance, and represent the number of floating-point operations that a CPU can perform each second. Modern CPUs and GPUs are capable of doing TeraFLOPS (10^12 floating-point operations per second), depending on the precision of those operations (half-precision: 16 bits, single-precision: 32 bits, double-precision: 64 bits). GPU # A Graphical Processing Unit (GPU) is a specialized device initially designed to generate graphical output. On modern computing architecture, they are used to accelerate certain types of computation, which they are much faster than CPUs at. GPUs have their own memory, and are attached to CPUs, within a node. Each compute node can host one or more GPUs. HPC # High Performance Computing (HPC) refers to the practice of aggregating computing power to achieve higher performance that would be possible by using a typical computer. Infiniband # Infiniband is a networking standard that features high bandwidth and low latency. The current Infiniband devices are capable of transferring data at up to 100 Gbits/sec with less than a microsecond latency. As of this writing, the popular Infiniband versions are FDR (Fourteen Data Rate) with 56 Gbits/sec and EDR (Enhanced Data Rate) with 100 Gbits/sec. IOPS # Input/output operations per second (IOPS, pronounced eye-ops) is an input/output performance measurement used to characterize computer storage system performance. Job # A job, or batch job, is the scheduler\u2019s base unit of computing by which resources are allocated to a user for a specified amount of time. Users create job submission scripts to ask the scheduler for resources such as cores, memory, runtime, etc. The scheduler puts the requests in a queue and allocates requested resources based on jobs\u2019 priority. Job step # Job steps are sets of (possibly parallel) tasks within a job Login nodes # Login nodes are points of access to a compute cluster. Users usually connect to login nodes via SSH to compile and debug their code, review their results, do some simple tests, and submit their batch jobs to the parallel computer. Login nodes are not for computing Login nodes are usually shared among many users and therefore must not be used to run computationally intensive tasks. Those should be submitted to the scheduler which will dispatch them on compute nodes. Modules # Environment modules, or software modules, are a type of software management tool used on in most HPC environments. Using modules enable users to selectively pick the software that they want to use and add them to their environment. This allows to switch between different versions or flavors of the same software, pick compilers, libraries and software components and avoid conflicts between them. MPI # Message Passing Interface (MPI) is a standardized and portable message-passing system designed to exchange information between processes running on different nodes. There are several implementations of the MPI standard, which is the most common way used to scale parallel applications beyond a single compute node. OpenMP # Open Multi Processing (OpenMP) is a parallel programming model designed for shared memory architecture. It's based on pragmas that can be added in applications to let the compiler generate a code that can run on multiple cores, within the same node. Partition # A partition is a set of compute nodes within a cluster with a common feature. For example, compute nodes with GPU, or compute nodes belonging to same owner, could form a partition. QOS # A Quality Of Service (QOS) is the set of rules and limitations that apply to a categories of job. The combination of a partition (set of machines where a job can run) and QOS (set of rules that applies to that job) makes what is often referred to as a scheduler queue . Run time # The run time, or walltime, of a job is the time required to finish its execution. Scheduler # The goal of a job scheduler is to find the appropriate resources to run a set of computational tasks in the most efficient manner. Based on resource requirements and job descriptions, it will prioritize those jobs, allocate resources (nodes, CPUs, memory) and schedule their execution. Slurm # Simple Linux Utility for Resource Management (SLURM) is a software that manages computing resources and schedule tasks on them. Slurm coordinates running of many programs on a shared facility and makes sure that resources are used in an optimal manner. SSH # Secure Shell (SSH) is a protocol to securely access remote computers. Based on the client-server model, multiple users with an SSH client can access a remote computer. Some operating systems such as Linux and Mac OS have a built-in SSH client and others can use one of many publicly available clients. Thread # A process, in the simplest terms, is an executing program. One or more threads run in the context of the process. A thread is the basic unit to which the operating system allocates processor time. A thread can execute any part of the process code, including parts currently being executed by another thread. Threads are co-located on the same node. Task # In the Slurm context, a task is to be understood as a process. A multi-process program is made of several tasks. A task is typically used to schedule a MPI process, that in turn can use several CPUs. By contrast, a multi-threaded program is composed of only one task, which uses several CPUs 1 . hogehoge \u21a9","title":"Kubernetes"},{"location":"references/kubernetes/#kubernetes","text":"","title":"Kubernetes"},{"location":"references/kubernetes/#cluster-components","text":"The terms that are typically used to describe cluster components could be confusing, so in an effort to clarify things, here's a schema of the most important ones, and their definition.","title":"Cluster components"},{"location":"references/kubernetes/#cpu","text":"A Central Processing Unit (CPU), or core, or CPU core, is the smallest unit in a microprocessor that can carry out computational tasks, that is, run programs. Modern processors typically have multiple cores.","title":"CPU"},{"location":"references/kubernetes/#socket","text":"A socket is the connector that houses the microprocessor. By extension, it represents the physical package of a processor, that typically contains multiple cores.","title":"Socket"},{"location":"references/kubernetes/#node","text":"A node is a physical, stand-alone computer, that can handle computing tasks and run jobs. It's connected to other compute nodes via a fast network interconnect, and contains CPUs, memory and devices managed by an operating system.","title":"Node"},{"location":"references/kubernetes/#cluster","text":"A cluster is the complete collection of nodes with networking and file storage facilities. It's usually a group of independent computers connected via a fast network interconnect, managed by a resource manager, which acts as a large parallel computer.","title":"Cluster"},{"location":"references/kubernetes/#other-commonly-used-terms","text":"To make this documentation more accessible, we try to explain key terms in a non-technical way. When reading these pages, please keep in mind the following definitions, presented in alphabetical order:","title":"Other commonly used terms"},{"location":"references/kubernetes/#application","text":"An application is a computer program designed to perform a group of coordinated functions, tasks, or activities for the benefit of the user. In the context of scientific computing, an application typically performs computations related to a scientific goal (molecular dynamics simulations, genome assembly, compuational fluid dynamics simulations, etc).","title":"Application"},{"location":"references/kubernetes/#backfill","text":"Backfill scheduling is a method that a scheduler can use in order to maximize utilization. It allows smaller (both in terms of size and time requirements), lower priority jobs to start before larger, higher priority ones, as long as doing so doesn't push back the higher-priority jobs expected start time.","title":"Backfill"},{"location":"references/kubernetes/#executable","text":"A binary (or executable) program refers to the machine-code compiled version of an application. This is which is a binary file that a computer can execute directly. As opposed to the application source code, which is the human-readable version of the application internal instructions, and which needs to be compiled by a compiler to produce the executable binary.","title":"Executable"},{"location":"references/kubernetes/#fairshare","text":"A resource scheduler ranks jobs by priority for execution. Each job's priority in queue is determined by multiple factors, among which one being the user's fairshare score. A user's fairshare score is computed based on a target (the given portion of the resources that this user should be able to use) and the user's effetive usage, ie the amount of resources (s)he effectively used in the past. As a result, the more resources past jobs have used, the lower the priority of the next jobs will be. Past usage is computed based on a sliding window and progressively forgotten over time. This enables all users on a shared resource to get a fair portion of it for their own use, by giving higher priorty to users who have been underserved in the past.","title":"Fairshare"},{"location":"references/kubernetes/#flops","text":"Floating-point Operations Per Second (FLOPS) are a measure of computing performance, and represent the number of floating-point operations that a CPU can perform each second. Modern CPUs and GPUs are capable of doing TeraFLOPS (10^12 floating-point operations per second), depending on the precision of those operations (half-precision: 16 bits, single-precision: 32 bits, double-precision: 64 bits).","title":"FLOPS"},{"location":"references/kubernetes/#gpu","text":"A Graphical Processing Unit (GPU) is a specialized device initially designed to generate graphical output. On modern computing architecture, they are used to accelerate certain types of computation, which they are much faster than CPUs at. GPUs have their own memory, and are attached to CPUs, within a node. Each compute node can host one or more GPUs.","title":"GPU"},{"location":"references/kubernetes/#hpc","text":"High Performance Computing (HPC) refers to the practice of aggregating computing power to achieve higher performance that would be possible by using a typical computer.","title":"HPC"},{"location":"references/kubernetes/#infiniband","text":"Infiniband is a networking standard that features high bandwidth and low latency. The current Infiniband devices are capable of transferring data at up to 100 Gbits/sec with less than a microsecond latency. As of this writing, the popular Infiniband versions are FDR (Fourteen Data Rate) with 56 Gbits/sec and EDR (Enhanced Data Rate) with 100 Gbits/sec.","title":"Infiniband"},{"location":"references/kubernetes/#iops","text":"Input/output operations per second (IOPS, pronounced eye-ops) is an input/output performance measurement used to characterize computer storage system performance.","title":"IOPS"},{"location":"references/kubernetes/#job","text":"A job, or batch job, is the scheduler\u2019s base unit of computing by which resources are allocated to a user for a specified amount of time. Users create job submission scripts to ask the scheduler for resources such as cores, memory, runtime, etc. The scheduler puts the requests in a queue and allocates requested resources based on jobs\u2019 priority.","title":"Job"},{"location":"references/kubernetes/#job-step","text":"Job steps are sets of (possibly parallel) tasks within a job","title":"Job step"},{"location":"references/kubernetes/#login-nodes","text":"Login nodes are points of access to a compute cluster. Users usually connect to login nodes via SSH to compile and debug their code, review their results, do some simple tests, and submit their batch jobs to the parallel computer. Login nodes are not for computing Login nodes are usually shared among many users and therefore must not be used to run computationally intensive tasks. Those should be submitted to the scheduler which will dispatch them on compute nodes.","title":"Login nodes"},{"location":"references/kubernetes/#modules","text":"Environment modules, or software modules, are a type of software management tool used on in most HPC environments. Using modules enable users to selectively pick the software that they want to use and add them to their environment. This allows to switch between different versions or flavors of the same software, pick compilers, libraries and software components and avoid conflicts between them.","title":"Modules"},{"location":"references/kubernetes/#mpi","text":"Message Passing Interface (MPI) is a standardized and portable message-passing system designed to exchange information between processes running on different nodes. There are several implementations of the MPI standard, which is the most common way used to scale parallel applications beyond a single compute node.","title":"MPI"},{"location":"references/kubernetes/#openmp","text":"Open Multi Processing (OpenMP) is a parallel programming model designed for shared memory architecture. It's based on pragmas that can be added in applications to let the compiler generate a code that can run on multiple cores, within the same node.","title":"OpenMP"},{"location":"references/kubernetes/#partition","text":"A partition is a set of compute nodes within a cluster with a common feature. For example, compute nodes with GPU, or compute nodes belonging to same owner, could form a partition.","title":"Partition"},{"location":"references/kubernetes/#qos","text":"A Quality Of Service (QOS) is the set of rules and limitations that apply to a categories of job. The combination of a partition (set of machines where a job can run) and QOS (set of rules that applies to that job) makes what is often referred to as a scheduler queue .","title":"QOS"},{"location":"references/kubernetes/#run-time","text":"The run time, or walltime, of a job is the time required to finish its execution.","title":"Run time"},{"location":"references/kubernetes/#scheduler","text":"The goal of a job scheduler is to find the appropriate resources to run a set of computational tasks in the most efficient manner. Based on resource requirements and job descriptions, it will prioritize those jobs, allocate resources (nodes, CPUs, memory) and schedule their execution.","title":"Scheduler"},{"location":"references/kubernetes/#slurm","text":"Simple Linux Utility for Resource Management (SLURM) is a software that manages computing resources and schedule tasks on them. Slurm coordinates running of many programs on a shared facility and makes sure that resources are used in an optimal manner.","title":"Slurm"},{"location":"references/kubernetes/#ssh","text":"Secure Shell (SSH) is a protocol to securely access remote computers. Based on the client-server model, multiple users with an SSH client can access a remote computer. Some operating systems such as Linux and Mac OS have a built-in SSH client and others can use one of many publicly available clients.","title":"SSH"},{"location":"references/kubernetes/#thread","text":"A process, in the simplest terms, is an executing program. One or more threads run in the context of the process. A thread is the basic unit to which the operating system allocates processor time. A thread can execute any part of the process code, including parts currently being executed by another thread. Threads are co-located on the same node.","title":"Thread"},{"location":"references/kubernetes/#task","text":"In the Slurm context, a task is to be understood as a process. A multi-process program is made of several tasks. A task is typically used to schedule a MPI process, that in turn can use several CPUs. By contrast, a multi-threaded program is composed of only one task, which uses several CPUs 1 . hogehoge \u21a9","title":"Task"}]}